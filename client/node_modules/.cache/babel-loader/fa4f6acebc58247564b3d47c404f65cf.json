{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Hooks\\\\ModalEditor.js\";\nimport React from 'react';\nimport { Editor, RichUtils } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalEditor = _ref => {\n  let {\n    editorState,\n    setEditorState,\n    setCheckIfNoteIsEdited,\n    placeholderText,\n    isReadOnly,\n    updatedAt\n  } = _ref;\n\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      setEditorState(newState);\n      setCheckIfNoteIsEdited(true);\n    }\n  };\n\n  const onChange = newState => {\n    const currentContentState = editorState.getCurrentContent();\n    const newContentState = newState.getCurrentContent();\n    setEditorState(newState);\n\n    if (currentContentState !== newContentState) {\n      setCheckIfNoteIsEdited(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      onChange: onChange,\n      placeholder: placeholderText,\n      handleKeyCommand: handleKeyCommand,\n      readOnly: isReadOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: updatedAt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = ModalEditor;\nexport default ModalEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalEditor\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Hooks/ModalEditor.js"],"names":["React","Editor","RichUtils","ModalEditor","editorState","setEditorState","setCheckIfNoteIsEdited","placeholderText","isReadOnly","updatedAt","handleKeyCommand","command","newState","onChange","currentContentState","getCurrentContent","newContentState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,UAAlC;AACA,OAAO,yBAAP;;;;AAEA,MAAMC,WAAW,GAAG,QAOd;AAAA,MAPe;AACnBC,IAAAA,WADmB;AAEnBC,IAAAA,cAFmB;AAGnBC,IAAAA,sBAHmB;AAInBC,IAAAA,eAJmB;AAKnBC,IAAAA,UALmB;AAMnBC,IAAAA;AANmB,GAOf;;AACJ,QAAMC,gBAAgB,GAAG,CAACC,OAAD,EAAUP,WAAV,KAA0B;AACjD,UAAMQ,QAAQ,GAAGV,SAAS,CAACQ,gBAAV,CAA2BN,WAA3B,EAAwCO,OAAxC,CAAjB;;AACA,QAAIC,QAAJ,EAAc;AACZP,MAAAA,cAAc,CAACO,QAAD,CAAd;AACAN,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;AACF,GAND;;AAQA,QAAMO,QAAQ,GAAID,QAAD,IAAc;AAC7B,UAAME,mBAAmB,GAAGV,WAAW,CAACW,iBAAZ,EAA5B;AACA,UAAMC,eAAe,GAAGJ,QAAQ,CAACG,iBAAT,EAAxB;AACAV,IAAAA,cAAc,CAACO,QAAD,CAAd;;AACA,QAAIE,mBAAmB,KAAKE,eAA5B,EAA6C;AAC3CV,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;AACF,GAPD;;AAQA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,WAAW,EAAEF,WADf;AAEE,MAAA,QAAQ,EAAES,QAFZ;AAGE,MAAA,WAAW,EAAEN,eAHf;AAIE,MAAA,gBAAgB,EAAEG,gBAJpB;AAKE,MAAA,QAAQ,EAAEF;AALZ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,gBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD,CApCD;;KAAMN,W;AAsCN,eAAeA,WAAf","sourcesContent":["import React from 'react'\r\nimport { Editor, RichUtils } from 'draft-js'\r\nimport 'draft-js/dist/Draft.css'\r\n\r\nconst ModalEditor = ({\r\n  editorState,\r\n  setEditorState,\r\n  setCheckIfNoteIsEdited,\r\n  placeholderText,\r\n  isReadOnly,\r\n  updatedAt,\r\n}) => {\r\n  const handleKeyCommand = (command, editorState) => {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command)\r\n    if (newState) {\r\n      setEditorState(newState)\r\n      setCheckIfNoteIsEdited(true)\r\n    }\r\n  }\r\n\r\n  const onChange = (newState) => {\r\n    const currentContentState = editorState.getCurrentContent()\r\n    const newContentState = newState.getCurrentContent()\r\n    setEditorState(newState)\r\n    if (currentContentState !== newContentState) {\r\n      setCheckIfNoteIsEdited(true)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Editor\r\n        editorState={editorState}\r\n        onChange={onChange}\r\n        placeholder={placeholderText}\r\n        handleKeyCommand={handleKeyCommand}\r\n        readOnly={isReadOnly}\r\n      />\r\n      <div>{updatedAt}</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ModalEditor\r\n"]},"metadata":{},"sourceType":"module"}