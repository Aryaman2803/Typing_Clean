{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const navigate = useNavigate();\n  const [Notes, setNotes] = useState();\n\n  const populateNotes = async token => {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const bodyParameters = {\n      key: 'value'\n    };\n    setNotes('Note loading...'); //TODO :axios headers 'x-access-token' : localStorage.getItem('token')\n\n    await axios.get('http://localhost:3000/api/dashboard/notes', bodyParameters, config).then(response => {\n      console.log(token);\n      console.log(response); // setNotes(response.data)\n    });\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = jwt_decode(token);\n\n      if (!user) {\n        localStorage.removeItem('token');\n        navigate('/login');\n      } else {\n        populateNotes(token);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Dashboard\", Notes]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"Q5BoFx/ZFulIhqcg2oCJUsM9zZM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","jwt_decode","useNavigate","axios","Dashboard","navigate","Notes","setNotes","populateNotes","token","config","headers","Authorization","bodyParameters","key","get","then","response","console","log","localStorage","getItem","user","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;;AACA,QAAMQ,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACrC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,KAAM;AAAjC;AADI,KAAf;AAGA,UAAMI,cAAc,GAAG;AACrBC,MAAAA,GAAG,EAAE;AADgB,KAAvB;AAGAP,IAAAA,QAAQ,CAAC,iBAAD,CAAR,CAPqC,CAQrC;;AAEA,UAAMJ,KAAK,CACRY,GADG,CACC,2CADD,EAC8CF,cAD9C,EAC8DH,MAD9D,EAEHM,IAFG,CAEGC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAFkB,CAGlB;AACD,KANG,CAAN;AAOD,GAjBD;;AAkBAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,KAAK,GAAGW,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIZ,KAAJ,EAAW;AACT,YAAMa,IAAI,GAAGrB,UAAU,CAACQ,KAAD,CAAvB;;AACA,UAAI,CAACa,IAAL,EAAW;AACTF,QAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;AACAlB,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,OAHD,MAGO;AACLG,QAAAA,aAAa,CAACC,KAAD,CAAb;AACD;AACF;AACF,GAXQ,EAWN,EAXM,CAAT;AAYA,sBACE;AAAA,4BAEGH,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAvCQF,S;UACUF,W;;;KADVE,S;AAyCT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport jwt_decode from 'jwt-decode'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\nfunction Dashboard() {\r\n  const navigate = useNavigate()\r\n  const [Notes, setNotes] = useState()\r\n  const populateNotes = async (token) => {\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n    const bodyParameters = {\r\n      key: 'value',\r\n    }\r\n    setNotes('Note loading...')\r\n    //TODO :axios headers 'x-access-token' : localStorage.getItem('token')\r\n\r\n    await axios\r\n      .get('http://localhost:3000/api/dashboard/notes', bodyParameters, config)\r\n      .then((response) => {\r\n        console.log(token);\r\n        console.log(response);\r\n        // setNotes(response.data)\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt_decode(token)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate('/login')\r\n      } else {\r\n        populateNotes(token)\r\n      }\r\n    }\r\n  }, [])\r\n  return (\r\n    <div>\r\n      Dashboard\r\n      {Notes}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}