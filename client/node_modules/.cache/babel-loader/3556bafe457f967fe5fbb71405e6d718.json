{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, FormControl, Grid, TextField } from '@mui/material';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport LockIcon from '@mui/icons-material/Lock';\nimport LoginIcon from '@mui/icons-material/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const navigate = useNavigate(); // const [email, setEmail] = useState('')\n  // const [password, setPassword] = useState('')\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const {\n    email,\n    password\n  } = formData;\n\n  const onChange = e => {\n    setError('');\n    setFormData(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const loginUser = async (email, password) => {\n    try {\n      const data = await axios.post('http://localhost:3000/api/login', {\n        email,\n        password\n      });\n      return data;\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      setError('Please enter all fields');\n      return;\n    }\n\n    const response = await loginUser(email, password);\n    console.log(response);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //TODO: install axios and set up post req\n    // await axios\n    //   .post('http://localhost:3000/api/login', {\n    //     email: email,\n    //     password: password,\n    //   })\n    //   .then((response) => {\n    //     const data = response.data\n    //     if (data.user) {\n    //       localStorage.setItem('token', data.user)\n    //       navigate(`/dashboard`)\n    //     } else {\n    //       alert('Please check the credentials')\n    //     }\n    //   })\n\n    const response = await loginUser(email, password); // if (response.data.status === 'ok') setToken(response.data.user)\n\n    if (response.data.status === 'ok') {\n      localStorage.setItem('token', response.data.user);\n      navigate('/dashboard');\n    } else alert('Please check the credentials');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      boxSizing: 'border-box',\n      minHeight: '100vh',\n      display: 'flex',\n      border: '3px solid red',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"center\",\n        justify: \"center\",\n        style: {\n          border: '3px solid teal'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"input-with-icon-textfield\",\n          label: \"Email\",\n          type: \"email\",\n          sx: {\n            mx: 'auto',\n            width: {\n              sm: 300,\n              md: 300,\n              lg: 300\n            },\n            p: 0.5,\n            m: 1\n          },\n          name: \"email\",\n          value: email,\n          onChange: onChange,\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          },\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            mx: 'auto',\n            width: {\n              sm: 300,\n              md: 300,\n              lg: 300\n            },\n            p: 0.5,\n            m: 1\n          },\n          id: \"input-with-icon-textfield\",\n          label: \"Password\",\n          name: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: onChange,\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          },\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          size: \"medium\",\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(LoginIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 22\n          }, this),\n          sx: {\n            width: 120,\n            mt: 2\n          },\n          children: [\"Login\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"qxV0C311VmkoW02yXwShXGfUx24=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Login/Login.js"],"names":["axios","React","useState","useNavigate","PropTypes","Button","FormControl","Grid","TextField","InputAdornment","AccountCircle","LockIcon","LoginIcon","Login","setToken","navigate","formData","setFormData","email","password","error","setError","onChange","e","prevState","target","name","value","loginUser","data","post","response","message","onSubmit","preventDefault","console","log","handleSubmit","status","localStorage","setItem","user","alert","boxSizing","minHeight","display","border","justifyContent","alignItems","mx","width","sm","md","lg","p","m","startAdornment","mt"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, FormControl, Grid, TextField } from '@mui/material'\r\nimport InputAdornment from '@mui/material/InputAdornment'\r\nimport AccountCircle from '@mui/icons-material/AccountCircle'\r\nimport LockIcon from '@mui/icons-material/Lock'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\n\r\nfunction Login({ setToken }) {\r\n  const navigate = useNavigate()\r\n  // const [email, setEmail] = useState('')\r\n  // const [password, setPassword] = useState('')\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n  const [error, setError] = useState('')\r\n  const { email, password } = formData\r\n  const onChange = (e) => {\r\n    setError('')\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }))\r\n  }\r\n\r\n  const loginUser = async (email, password) => {\r\n    try {\r\n      const data = await axios.post('http://localhost:3000/api/login', {\r\n        email,\r\n        password,\r\n      })\r\n      return data\r\n    } catch (error) {\r\n      setError(error.response.data.message)\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (email === '' || password === '') {\r\n      setError('Please enter all fields')\r\n      return\r\n    }\r\n    const response = await loginUser(email, password)\r\n    console.log(response)\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    //TODO: install axios and set up post req\r\n    // await axios\r\n    //   .post('http://localhost:3000/api/login', {\r\n    //     email: email,\r\n    //     password: password,\r\n    //   })\r\n    //   .then((response) => {\r\n    //     const data = response.data\r\n    //     if (data.user) {\r\n    //       localStorage.setItem('token', data.user)\r\n    //       navigate(`/dashboard`)\r\n    //     } else {\r\n    //       alert('Please check the credentials')\r\n    //     }\r\n    //   })\r\n    const response = await loginUser(email, password)\r\n    // if (response.data.status === 'ok') setToken(response.data.user)\r\n    if (response.data.status === 'ok') {\r\n      localStorage.setItem('token', response.data.user)\r\n      navigate('/dashboard')\r\n    } else alert('Please check the credentials')\r\n  }\r\n  return (\r\n    <section\r\n      style={{\r\n        boxSizing: 'border-box',\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        border: '3px solid red',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <form>\r\n        <Grid\r\n          container\r\n          direction='column'\r\n          alignItems='center'\r\n          justify='center'\r\n          style={{ border: '3px solid teal' }}\r\n        >\r\n          <TextField\r\n            id='input-with-icon-textfield'\r\n            label='Email'\r\n            type='email'\r\n            sx={{\r\n              mx: 'auto',\r\n              width: {\r\n                sm: 300,\r\n                md: 300,\r\n                lg: 300,\r\n              },\r\n              p: 0.5,\r\n              m: 1,\r\n            }}\r\n            name='email'\r\n            value={email}\r\n            onChange={onChange}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position='start'>\r\n                  <AccountCircle />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            variant='standard'\r\n          />\r\n          <TextField\r\n            sx={{\r\n              mx: 'auto',\r\n              width: {\r\n                sm: 300,\r\n                md: 300,\r\n                lg: 300,\r\n              },\r\n              p: 0.5,\r\n              m: 1,\r\n            }}\r\n            id='input-with-icon-textfield'\r\n            label='Password'\r\n            name='password'\r\n            type='password'\r\n            value={password}\r\n            onChange={onChange}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position='start'>\r\n                  <LockIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            variant='standard'\r\n          />\r\n          <Button\r\n            type='submit'\r\n            size='medium'\r\n            variant='contained'\r\n            endIcon={<LoginIcon />}\r\n            sx={{ width: 120, mt: 2 }}\r\n          >\r\n            Login{' '}\r\n          </Button>\r\n        </Grid>\r\n      </form>\r\n      {/* <form onSubmit={onSubmit}>\r\n        <input\r\n          type='email'\r\n          name='email'\r\n          placeholder='Enter email'\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='password'\r\n          name='password'\r\n          placeholder='Enter password'\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        {/* <Button variant='contained'>Hello World</Button>; */}\r\n      {/* <button type='submit'> Login</button> }\r\n      </form> */}\r\n      {error}\r\n      {/* <form>\r\n        <label>Email</label>\r\n        <input type='text' onChange={(e) => setEmail(e.target.value)} />\r\n        <label>Passowrd</label>\r\n        <input type='password' onChange={(e) => setPassword(e.target.value)} />\r\n        <button onClick={handleSubmit}>Submit</button>\r\n      </form> */}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}