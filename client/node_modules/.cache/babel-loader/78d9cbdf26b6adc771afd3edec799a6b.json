{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\Note.js\",\n    _s = $RefreshSig$();\n\nimport './Dashboard.css';\nimport React, { useState } from 'react';\nimport { Link, useNavigate, useLocation, Navigate, useParams } from 'react-router-dom';\nimport { Dialog, Input, TextareaAutosize, TextField } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BootstrapDialog = styled(Dialog)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    '& .MuiDialogContent-root': {// padding: theme.spacing(0),\n    },\n    '& .MuiDialogActions-root': {// padding: theme.spacing(0),\n    }\n  };\n});\n\nconst BootstrapDialogTitle = props => {\n  const {\n    children,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DialogTitle, {\n    sx: {\n      m: 0,\n      p: 0\n    },\n    ...other,\n    children: [children, onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      onClick: onClose,\n      sx: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        color: theme => theme.palette.grey[500]\n      },\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BootstrapDialogTitle;\n\nconst Note = _ref2 => {\n  _s();\n\n  let {\n    note\n  } = _ref2;\n  const location = useLocation();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [Note, setNote] = useState({\n    id: note._id,\n    title: note.title,\n    body: note.body\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const onChange = e => {\n    console.log('note', Note.body);\n    setNote(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleClose = async () => {\n    //TODO update note\n    // const resp = await axios.put(`/api/dashboard/notes/${Note.id}`, {\n    //   title: Note.title,\n    //   body: Note.body,\n    // })\n    // console.log('resp', resp)\n    console.log('closed');\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"single-note\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/api/dashboard/${note._id}`,\n      state: {\n        background: location\n      },\n      className: \"note-link\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-title\",\n        children: [\" \", note.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-body\",\n        children: [\" \", note.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, note._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this); // return (\n  //   // <div className='note-container' onClick={(e) => onNoteClick(_id)}>\n  //   <div>\n  //     <Button variant='outlined' onClick={handleClickOpen}>\n  //       Open dialog\n  //     </Button>\n  //     <BootstrapDialog\n  //       onClose={handleClose}\n  //       aria-labelledby='customized-dialog-title'\n  //       open={open}\n  //       // maxWidth=\"md\"\n  //       fullWidth\n  //     >\n  //       <TextareaAutosize\n  //         aria-label='empty textarea'\n  //         // minRows={3}\n  //         style={{\n  //           padding: '1rem',\n  //           fontSize: '1.5rem',\n  //           width: '100%',\n  //           boxSizing: 'border-box',\n  //         }}\n  //         name='title'\n  //         placeholder='Title'\n  //         onChange={onChange}\n  //         defaultValue={Note.title}\n  //       />\n  //       <DialogContent dividers>\n  //         <TextareaAutosize\n  //           aria-label='empty textarea'\n  //           placeholder='Body'\n  //           minRows={10}\n  //           name='body'\n  //           onChange={onChange}\n  //           defaultValue={Note.body}\n  //           style={{ width: '100%', boxSizing: 'border-box' }}\n  //         />\n  //       </DialogContent>\n  //       <DialogActions>\n  //         {/* <Button autoFocus onClick={handleClose}>\n  //           Save changes\n  //         </Button> */}\n  //       </DialogActions>\n  //     </BootstrapDialog>\n  //   </div>\n  // )\n};\n\n_s(Note, \"8t1L2jr/GtQ5KmqU5ASyPL+hM4E=\", false, function () {\n  return [useLocation, useParams, useNavigate];\n});\n\n_c2 = Note;\nexport default Note;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BootstrapDialogTitle\");\n$RefreshReg$(_c2, \"Note\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Note.js"],"names":["React","useState","Link","useNavigate","useLocation","Navigate","useParams","Dialog","Input","TextareaAutosize","TextField","Button","styled","DialogTitle","DialogContent","DialogActions","IconButton","CloseIcon","Typography","axios","BootstrapDialog","theme","BootstrapDialogTitle","props","children","onClose","other","m","p","position","right","top","color","palette","grey","Note","note","location","id","navigate","setNote","_id","title","body","open","setOpen","onChange","e","console","log","prevState","target","name","value","handleClose","background"],"mappings":"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","sourcesContent":["import './Dashboard.css'\r\nimport React, { useState } from 'react'\r\nimport {\r\n  Link,\r\n  useNavigate,\r\n  useLocation,\r\n  Navigate,\r\n  useParams,\r\n} from 'react-router-dom'\r\nimport { Dialog, Input, TextareaAutosize, TextField } from '@mui/material'\r\nimport Button from '@mui/material/Button'\r\nimport { styled } from '@mui/material/styles'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport Typography from '@mui/material/Typography'\r\nimport axios from 'axios'\r\nimport './Dashboard.css'\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    // padding: theme.spacing(0),\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    // padding: theme.spacing(0),\r\n  },\r\n}))\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n  const { children, onClose, ...other } = props\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 0 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label='close'\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  )\r\n}\r\nconst Note = ({ note, }) => {\r\n  const location = useLocation()\r\n  const { id } = useParams()\r\n  const navigate = useNavigate()\r\n  const [Note, setNote] = useState({\r\n    id: note._id,\r\n    title: note.title,\r\n    body: note.body,\r\n  })\r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  const onChange = (e) => {\r\n    console.log('note', Note.body)\r\n    setNote((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }))\r\n  }\r\n  const handleClose = async () => {\r\n    //TODO update note\r\n    // const resp = await axios.put(`/api/dashboard/notes/${Note.id}`, {\r\n    //   title: Note.title,\r\n    //   body: Note.body,\r\n    // })\r\n    // console.log('resp', resp)\r\n    console.log('closed')\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <section className='single-note' >\r\n      <Link\r\n        key={note._id}\r\n        to={`/api/dashboard/${note._id}`}\r\n        state={{ background: location }}\r\n        className='note-link'\r\n        \r\n      >\r\n        <div className='note-title'> {note.title}</div>\r\n        <div className='note-body'> {note.body}</div>\r\n      </Link>\r\n    </section>\r\n  )\r\n  // return (\r\n  //   // <div className='note-container' onClick={(e) => onNoteClick(_id)}>\r\n  //   <div>\r\n  //     <Button variant='outlined' onClick={handleClickOpen}>\r\n  //       Open dialog\r\n  //     </Button>\r\n  //     <BootstrapDialog\r\n  //       onClose={handleClose}\r\n  //       aria-labelledby='customized-dialog-title'\r\n  //       open={open}\r\n  //       // maxWidth=\"md\"\r\n  //       fullWidth\r\n  //     >\r\n  //       <TextareaAutosize\r\n  //         aria-label='empty textarea'\r\n  //         // minRows={3}\r\n  //         style={{\r\n  //           padding: '1rem',\r\n  //           fontSize: '1.5rem',\r\n  //           width: '100%',\r\n  //           boxSizing: 'border-box',\r\n  //         }}\r\n  //         name='title'\r\n  //         placeholder='Title'\r\n  //         onChange={onChange}\r\n  //         defaultValue={Note.title}\r\n  //       />\r\n  //       <DialogContent dividers>\r\n  //         <TextareaAutosize\r\n  //           aria-label='empty textarea'\r\n  //           placeholder='Body'\r\n  //           minRows={10}\r\n  //           name='body'\r\n  //           onChange={onChange}\r\n  //           defaultValue={Note.body}\r\n  //           style={{ width: '100%', boxSizing: 'border-box' }}\r\n  //         />\r\n  //       </DialogContent>\r\n  //       <DialogActions>\r\n  //         {/* <Button autoFocus onClick={handleClose}>\r\n  //           Save changes\r\n  //         </Button> */}\r\n  //       </DialogActions>\r\n  //     </BootstrapDialog>\r\n  //   </div>\r\n  // )\r\n}\r\n\r\nexport default Note\r\n"]},"metadata":{},"sourceType":"module"}