{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\editNote.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditNote = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [noteData, setNoteData] = useState();\n\n  const verifyUser = () => {\n    try {\n      const response = axios.get(`/api/dashboard/notes/${id}`, {\n        withCredentials: true\n      });\n\n      if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n        var _response$data;\n\n        setNoteData(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.note);\n        console.log('printing resonse', response);\n      }\n\n      console.log(response);\n    } catch (err) {\n      console.log('error from editNote js file', err);\n      navigate('/login');\n    }\n  };\n\n  useEffect(() => {\n    verifyUser();\n  }, []);\n  const BootstrapDialog = styled(Dialog)(_ref => {\n    let {\n      theme\n    } = _ref;\n    return {\n      '& .MuiDialogContent-root': {\n        padding: theme.spacing(2)\n      },\n      '& .MuiDialogActions-root': {\n        padding: theme.spacing(1)\n      }\n    };\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const BootstrapDialogTitle = props => {\n    const {\n      children,\n      onClose,\n      ...other\n    } = props;\n    return /*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        m: 0,\n        p: 2\n      },\n      ...other,\n      children: [children, onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        onClick: onClose,\n        sx: {\n          position: 'absolute',\n          right: 8,\n          top: 8,\n          color: theme => theme.palette.grey[500]\n        },\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  };\n\n  if (!id) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"No id found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 18\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this); //   return (\n  //     <div>\n  //     <Button variant=\"outlined\" onClick={handleClickOpen}>\n  //       Open dialog\n  //     </Button>\n  //     <BootstrapDialog\n  //       onClose={handleClose}\n  //       aria-labelledby=\"customized-dialog-title\"\n  //       open={open}\n  //     >\n  //       <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n  //         Modal title\n  //       </BootstrapDialogTitle>\n  //       <DialogContent dividers>\n  //         Body\n  //       </DialogContent>\n  //     </BootstrapDialog>\n  //   </div>\n  //   )\n};\n\n_s(EditNote, \"m0wGWEErIpLH0HGMJKmYb8Xn51k=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EditNote;\nexport default EditNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditNote\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/editNote.js"],"names":["axios","React","useEffect","useState","useNavigate","useParams","PropTypes","Button","styled","Dialog","DialogTitle","DialogContent","IconButton","CloseIcon","EditNote","navigate","id","noteData","setNoteData","verifyUser","response","get","withCredentials","status","data","note","console","log","err","BootstrapDialog","theme","padding","spacing","open","setOpen","handleClickOpen","handleClose","BootstrapDialogTitle","props","children","onClose","other","m","p","position","right","top","color","palette","grey"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nconst EditNote = () => {\r\n  const navigate = useNavigate()\r\n  const { id } = useParams()\r\n  const [noteData, setNoteData] = useState()\r\n  const verifyUser = () => {\r\n    try {\r\n      const response = axios.get(`/api/dashboard/notes/${id}`, {\r\n        withCredentials: true,\r\n      })\r\n      if (response?.status === 200) {\r\n        setNoteData(response?.data?.note)\r\n        console.log('printing resonse', response)\r\n      }\r\n      console.log(response)\r\n    } catch (err) {\r\n      console.log('error from editNote js file', err)\r\n      navigate('/login')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    verifyUser()\r\n  }, [])\r\n\r\n  const BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n      padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n      padding: theme.spacing(1),\r\n    },\r\n  }));\r\n  const [open, setOpen] = React.useState(false)\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const BootstrapDialogTitle = (props) => {\r\n    const { children, onClose, ...other } = props;\r\n  \r\n    return (\r\n      <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n        {children}\r\n        {onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={onClose}\r\n            sx={{\r\n              position: 'absolute',\r\n              right: 8,\r\n              top: 8,\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n    );\r\n  };\r\n\r\n  if(!id) return <h3>No id found</h3>\r\n  return (\r\n      <div>\r\n          \r\n      </div>\r\n  )\r\n//   return (\r\n//     <div>\r\n//     <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n//       Open dialog\r\n//     </Button>\r\n//     <BootstrapDialog\r\n//       onClose={handleClose}\r\n//       aria-labelledby=\"customized-dialog-title\"\r\n//       open={open}\r\n//     >\r\n//       <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n//         Modal title\r\n//       </BootstrapDialogTitle>\r\n//       <DialogContent dividers>\r\n//         Body\r\n//       </DialogContent>\r\n     \r\n//     </BootstrapDialog>\r\n//   </div>\r\n//   )\r\n}\r\n\r\nexport default EditNote\r\n"]},"metadata":{},"sourceType":"module"}