{"ast":null,"code":"// import React, { useContext, useEffect, useRef, useState } from 'react'\n// import { useNavigate, useParams } from 'react-router-dom'\n// import { Dialog } from '@reach/dialog'\n// import '@reach/dialog/styles.css'\n// import axios from 'axios'\n// import DialogContent from '@mui/material/DialogContent'\n// import { TextareaAutosize } from '@mui/material'\n// import userNotesContext from '../../Context/userNotesContext'\n// import ContentEditable from 'react-contenteditable'\n// import sanitizeHtml from 'sanitize-html'\n// import './Dashboard.css'\n// import { ContentState, convertFromHTML, convertFromRaw, Editor, EditorState } from 'draft-js'\n// import EditorComp from '../../Hooks/DraftEditor'\n// const initialState = EditorState.createEmpty()\n// const Modal = () => {\n//   let navigate = useNavigate()\n//   let { id } = useParams()\n//   let buttonRef = useRef(null)\n//   const { setCheckIfNoteUpdated } = useContext(userNotesContext)\n//   const [CheckIfNoteIsEdited, setCheckIfNoteIsEdited] = useState(false)\n//   const onDismiss = async () => {\n//     if (CheckIfNoteIsEdited) {\n//       await axios.put(`/api/dashboard/notes/${id}`, {\n//         title: Note.title,\n//         body: Note.body,\n//       })\n//       setCheckIfNoteUpdated(true)\n//       setCheckIfNoteIsEdited(false)\n//     }\n//     navigate(-1)\n//   }\n//   const [Note, setNote] = useState({\n//     id: id,\n//     title: '',\n//     body: '',\n//   })\n//   let fetchBodyData\n//   const fetchNote = async (id) => {\n//     try {\n//       const response = await axios.get(`/api/dashboard/${id}`, {\n//         withCredentials: true,\n//       })\n//       if (response?.status === 200) {\n//         fetchBodyData = await response?.data?.note?.body\n//         setNote({\n//           title: response?.data?.note?.title,\n//           body: response?.data?.note?.body,\n//           // body: response?.data?.note?.body,\n//         })\n//       }\n//     } catch (err) {\n//       console.log('error from dashboard js file', err)\n//       navigate('/login')\n//     }\n//   }\n//   const onChange = (e) => {\n//     setNote((prevState) => ({\n//       ...prevState,\n//       [e.target.name]: e.target.value,\n//     }))\n//     setCheckIfNoteIsEdited(true)\n//   }\n//   console.log(CheckIfNoteIsEdited)\n//   useEffect(() => {\n//     fetchNote(id)\n//   }, [])\n//   // const bodyContent = fetchBodyData\n//   //   ? EditorState.createWithContent(convertFromHTML(JSON.parse(fetchBodyData)))\n//   //   : EditorState.createEmpty()\n//   // const [body, setBody] = useState({body: bodyContent})\n//   // const [state, setState] = useState({\n//   //   editorState: EditorState.createEmpty(),\n//   // })\n//   // const handleEditorChange = (body) => {\n//   //   setBody({ body });\n//   //   setCheckIfNoteIsEdited(true)\n//   // }\n//   // const onChangee = (editorState) => {\n//   //   setState({\n//   //     editorState,\n//   //   })\n//   // }\n//   if (!id) return null\n//   return (\n//     <Dialog\n//       aria-labelledby='label'\n//       className='modal-wrapper'\n//       onDismiss={onDismiss}\n//       initialFocusRef={buttonRef}\n//       // style={{padding: '0px'}}\n//     >\n//       <div className='modal-wrapper-inner sc1'>\n//         <ContentEditable\n//           className='title-contenteditable'\n//           html={Note.title}\n//           onChange={(e) =>\n//             onChange({ target: { name: 'title', value: e.target.value } })\n//           }\n//           name='title'\n//           placeholder='Title'\n//           // defaultValue={Note.title}\n//         />\n//         {/* <Editor   editorState={body.body} onChange={handleEditorChange}/> */}\n//         {/* <ContentEditable\n//           className='body-contenteditable'\n//           html={Note.body}\n//           onChange={(e) =>\n//             onChange({ target: { name: 'body', value: e.target.value } })\n//           }\n//           name='body'\n//           placeholder='Type your note here'\n//           // defaultValue={Note.title}\n//         /> */}\n//         {/* <TextareaAutosize\n//           aria-label='Enter Title'\n//           // minRows={3}\n//           style={{\n//             padding: '0.7rem',\n//             fontSize: '1.5rem',\n//             width: '100%',\n//             boxSizing: 'border-box',\n//           }}\n//           name='title'\n//           placeholder='Title'\n//           onChange={onChange}\n//           defaultValue={Note?.title}\n//         /> */}\n//         {/* <DialogContent dividers> */}\n//         {/* <TextareaAutosize\n//           aria-label='Enter Body'\n//           placeholder='Body'\n//           minRows={10}\n//           name='body'\n//           onChange={onChange}\n//           className='body-contenteditable'\n//           defaultValue={Note?.body}\n//         /> */}\n//         {/* </DialogContent> */}\n//       </div>\n//     </Dialog>\n//   )\n// }\n// export default Modal","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Modal.js"],"names":[],"mappingssourcesContent":["// import React, { useContext, useEffect, useRef, useState } from 'react'\r\n// import { useNavigate, useParams } from 'react-router-dom'\r\n// import { Dialog } from '@reach/dialog'\r\n// import '@reach/dialog/styles.css'\r\n// import axios from 'axios'\r\n// import DialogContent from '@mui/material/DialogContent'\r\n// import { TextareaAutosize } from '@mui/material'\r\n// import userNotesContext from '../../Context/userNotesContext'\r\n// import ContentEditable from 'react-contenteditable'\r\n// import sanitizeHtml from 'sanitize-html'\r\n// import './Dashboard.css'\r\n// import { ContentState, convertFromHTML, convertFromRaw, Editor, EditorState } from 'draft-js'\r\n// import EditorComp from '../../Hooks/DraftEditor'\r\n// const initialState = EditorState.createEmpty()\r\n\r\n// const Modal = () => {\r\n//   let navigate = useNavigate()\r\n//   let { id } = useParams()\r\n//   let buttonRef = useRef(null)\r\n//   const { setCheckIfNoteUpdated } = useContext(userNotesContext)\r\n//   const [CheckIfNoteIsEdited, setCheckIfNoteIsEdited] = useState(false)\r\n\r\n//   const onDismiss = async () => {\r\n//     if (CheckIfNoteIsEdited) {\r\n//       await axios.put(`/api/dashboard/notes/${id}`, {\r\n//         title: Note.title,\r\n//         body: Note.body,\r\n//       })\r\n//       setCheckIfNoteUpdated(true)\r\n//       setCheckIfNoteIsEdited(false)\r\n//     }\r\n\r\n//     navigate(-1)\r\n//   }\r\n//   const [Note, setNote] = useState({\r\n//     id: id,\r\n//     title: '',\r\n//     body: '',\r\n//   })\r\n\r\n//   let fetchBodyData\r\n//   const fetchNote = async (id) => {\r\n//     try {\r\n//       const response = await axios.get(`/api/dashboard/${id}`, {\r\n//         withCredentials: true,\r\n//       })\r\n//       if (response?.status === 200) {\r\n//         fetchBodyData = await response?.data?.note?.body\r\n//         setNote({\r\n//           title: response?.data?.note?.title,\r\n//           body: response?.data?.note?.body,\r\n\r\n//           // body: response?.data?.note?.body,\r\n//         })\r\n//       }\r\n//     } catch (err) {\r\n//       console.log('error from dashboard js file', err)\r\n//       navigate('/login')\r\n//     }\r\n//   }\r\n//   const onChange = (e) => {\r\n//     setNote((prevState) => ({\r\n//       ...prevState,\r\n//       [e.target.name]: e.target.value,\r\n//     }))\r\n//     setCheckIfNoteIsEdited(true)\r\n//   }\r\n//   console.log(CheckIfNoteIsEdited)\r\n\r\n//   useEffect(() => {\r\n//     fetchNote(id)\r\n//   }, [])\r\n//   // const bodyContent = fetchBodyData\r\n//   //   ? EditorState.createWithContent(convertFromHTML(JSON.parse(fetchBodyData)))\r\n//   //   : EditorState.createEmpty()\r\n//   // const [body, setBody] = useState({body: bodyContent})\r\n\r\n//   // const [state, setState] = useState({\r\n//   //   editorState: EditorState.createEmpty(),\r\n//   // })\r\n//   // const handleEditorChange = (body) => {\r\n//   //   setBody({ body });\r\n//   //   setCheckIfNoteIsEdited(true)\r\n//   // }\r\n\r\n//   // const onChangee = (editorState) => {\r\n//   //   setState({\r\n//   //     editorState,\r\n//   //   })\r\n//   // }\r\n//   if (!id) return null\r\n//   return (\r\n//     <Dialog\r\n//       aria-labelledby='label'\r\n//       className='modal-wrapper'\r\n//       onDismiss={onDismiss}\r\n//       initialFocusRef={buttonRef}\r\n//       // style={{padding: '0px'}}\r\n//     >\r\n//       <div className='modal-wrapper-inner sc1'>\r\n//         <ContentEditable\r\n//           className='title-contenteditable'\r\n//           html={Note.title}\r\n//           onChange={(e) =>\r\n//             onChange({ target: { name: 'title', value: e.target.value } })\r\n//           }\r\n//           name='title'\r\n//           placeholder='Title'\r\n//           // defaultValue={Note.title}\r\n//         />\r\n//         {/* <Editor   editorState={body.body} onChange={handleEditorChange}/> */}\r\n//         {/* <ContentEditable\r\n//           className='body-contenteditable'\r\n//           html={Note.body}\r\n//           onChange={(e) =>\r\n//             onChange({ target: { name: 'body', value: e.target.value } })\r\n//           }\r\n//           name='body'\r\n//           placeholder='Type your note here'\r\n//           // defaultValue={Note.title}\r\n//         /> */}\r\n//         {/* <TextareaAutosize\r\n//           aria-label='Enter Title'\r\n//           // minRows={3}\r\n//           style={{\r\n//             padding: '0.7rem',\r\n//             fontSize: '1.5rem',\r\n//             width: '100%',\r\n//             boxSizing: 'border-box',\r\n//           }}\r\n//           name='title'\r\n//           placeholder='Title'\r\n//           onChange={onChange}\r\n//           defaultValue={Note?.title}\r\n//         /> */}\r\n//         {/* <DialogContent dividers> */}\r\n//         {/* <TextareaAutosize\r\n//           aria-label='Enter Body'\r\n//           placeholder='Body'\r\n//           minRows={10}\r\n//           name='body'\r\n//           onChange={onChange}\r\n//           className='body-contenteditable'\r\n//           defaultValue={Note?.body}\r\n//         /> */}\r\n//         {/* </DialogContent> */}\r\n//       </div>\r\n//     </Dialog>\r\n//   )\r\n// }\r\n\r\n// export default Modal\r\n"]},"metadata":{},"sourceType":"module"}