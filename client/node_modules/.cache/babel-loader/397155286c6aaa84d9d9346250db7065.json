{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Hooks\\\\DraftEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditorComp = _ref => {\n  _s();\n\n  let {\n    value\n  } = _ref;\n  const initialState = value ? EditorState.createWithContent(convertFromRaw(JSON.parse(value))) : EditorState.createEmpty();\n  const [editorState, setEditorState] = useState(initialState);\n  return /*#__PURE__*/_jsxDEV(Editor, {\n    editorState: editorState,\n    onChange: setEditorState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n\n_s(EditorComp, \"Nq8+3gt+jUld3k+WY9oQ9rJC650=\");\n\n_c = EditorComp;\nexport default EditorComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorComp\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Hooks/DraftEditor.js"],"names":["React","useState","Editor","EditorState","convertFromRaw","EditorComp","value","initialState","createWithContent","JSON","parse","createEmpty","editorState","setEditorState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,cAA9B,QAAoD,UAApD;;;AAEA,MAAMC,UAAU,GAAE,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC/B,QAAMC,YAAY,GAAGD,KAAK,GACtBH,WAAW,CAACK,iBAAZ,CAA8BJ,cAAc,CAACK,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAD,CAA5C,CADsB,GAEtBH,WAAW,CAACQ,WAAZ,EAFJ;AAGA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAACM,YAAD,CAA9C;AAEA,sBAAO,QAAC,MAAD;AAAQ,IAAA,WAAW,EAAEK,WAArB;AAAkC,IAAA,QAAQ,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAPD;;GAAMR,U;;KAAAA,U;AASN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\r\n\r\nconst EditorComp= ({ value }) => {\r\n  const initialState = value\r\n    ? EditorState.createWithContent(convertFromRaw(JSON.parse(value)))\r\n    : EditorState.createEmpty();\r\n  const [editorState, setEditorState] = useState(initialState);\r\n\r\n  return <Editor editorState={editorState} onChange={setEditorState} />;\r\n};\r\n\r\nexport default EditorComp;"]},"metadata":{},"sourceType":"module"}