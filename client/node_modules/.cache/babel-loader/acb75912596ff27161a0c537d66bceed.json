{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withSideEffect from 'react-clientside-effect';\nimport moveFocusInside, { focusInside, focusIsHidden, getFocusabledIn } from 'focus-lock';\nimport { deferAction } from './util';\nimport { mediumFocus, mediumBlur, mediumEffect } from './medium';\n\nvar focusOnBody = function focusOnBody() {\n  return document && document.activeElement === document.body;\n};\n\nvar isFreeFocus = function isFreeFocus() {\n  return focusOnBody() || focusIsHidden();\n};\n\nvar lastActiveTrap = null;\nvar lastActiveFocus = null;\nvar lastPortaledElement = null;\nvar focusWasOutsideWindow = false;\n\nvar defaultWhitelist = function defaultWhitelist() {\n  return true;\n};\n\nvar focusWhitelisted = function focusWhitelisted(activeElement) {\n  return (lastActiveTrap.whiteList || defaultWhitelist)(activeElement);\n};\n\nvar recordPortal = function recordPortal(observerNode, portaledElement) {\n  lastPortaledElement = {\n    observerNode: observerNode,\n    portaledElement: portaledElement\n  };\n};\n\nvar focusIsPortaledPair = function focusIsPortaledPair(element) {\n  return lastPortaledElement && lastPortaledElement.portaledElement === element;\n};\n\nfunction autoGuard(startIndex, end, step, allNodes) {\n  var lastGuard = null;\n  var i = startIndex;\n\n  do {\n    var item = allNodes[i];\n\n    if (item.guard) {\n      if (item.node.dataset.focusAutoGuard) {\n        lastGuard = item;\n      }\n    } else if (item.lockItem) {\n      if (i !== startIndex) {\n        // we will tab to the next element\n        return;\n      }\n\n      lastGuard = null;\n    } else {\n      break;\n    }\n  } while ((i += step) !== end);\n\n  if (lastGuard) {\n    lastGuard.node.tabIndex = 0;\n  }\n}\n\nvar extractRef = function extractRef(ref) {\n  return ref && 'current' in ref ? ref.current : ref;\n};\n\nvar focusWasOutside = function focusWasOutside(crossFrameOption) {\n  if (crossFrameOption) {\n    // with cross frame return true for any value\n    return Boolean(focusWasOutsideWindow);\n  } // in other case return only of focus went a while aho\n\n\n  return focusWasOutsideWindow === 'meanwhile';\n};\n\nvar checkInHost = function checkInHost(check, el, boundary) {\n  return el // find host equal to active element and check nested active element\n  && (el.host === check && (!el.activeElement || boundary.contains(el.activeElement)) // dive up\n  || el.parentNode && checkInHost(check, el.parentNode, boundary));\n};\n\nvar withinHost = function withinHost(activeElement, workingArea) {\n  return workingArea.some(function (area) {\n    return checkInHost(activeElement, area, area);\n  });\n};\n\nvar activateTrap = function activateTrap() {\n  var result = false;\n\n  if (lastActiveTrap) {\n    var _lastActiveTrap = lastActiveTrap,\n        observed = _lastActiveTrap.observed,\n        persistentFocus = _lastActiveTrap.persistentFocus,\n        autoFocus = _lastActiveTrap.autoFocus,\n        shards = _lastActiveTrap.shards,\n        crossFrame = _lastActiveTrap.crossFrame,\n        focusOptions = _lastActiveTrap.focusOptions;\n    var workingNode = observed || lastPortaledElement && lastPortaledElement.portaledElement;\n    var activeElement = document && document.activeElement;\n\n    if (workingNode) {\n      var workingArea = [workingNode].concat(shards.map(extractRef).filter(Boolean));\n\n      if (!activeElement || focusWhitelisted(activeElement)) {\n        if (persistentFocus || focusWasOutside(crossFrame) || !isFreeFocus() || !lastActiveFocus && autoFocus) {\n          if (workingNode && !( // active element is \"inside\" working area\n          focusInside(workingArea) || // check for shadow-dom contained elements\n          activeElement && withinHost(activeElement, workingArea) || focusIsPortaledPair(activeElement, workingNode))) {\n            if (document && !lastActiveFocus && activeElement && !autoFocus) {\n              // Check if blur() exists, which is missing on certain elements on IE\n              if (activeElement.blur) {\n                activeElement.blur();\n              }\n\n              document.body.focus();\n            } else {\n              result = moveFocusInside(workingArea, lastActiveFocus, {\n                focusOptions: focusOptions\n              });\n              lastPortaledElement = {};\n            }\n          }\n\n          focusWasOutsideWindow = false;\n          lastActiveFocus = document && document.activeElement;\n        }\n      }\n\n      if (document) {\n        var newActiveElement = document && document.activeElement;\n        var allNodes = getFocusabledIn(workingArea);\n        var focusedIndex = allNodes.map(function (_ref) {\n          var node = _ref.node;\n          return node;\n        }).indexOf(newActiveElement);\n\n        if (focusedIndex > -1) {\n          // remove old focus\n          allNodes.filter(function (_ref2) {\n            var guard = _ref2.guard,\n                node = _ref2.node;\n            return guard && node.dataset.focusAutoGuard;\n          }).forEach(function (_ref3) {\n            var node = _ref3.node;\n            return node.removeAttribute('tabIndex');\n          });\n          autoGuard(focusedIndex, allNodes.length, +1, allNodes);\n          autoGuard(focusedIndex, -1, -1, allNodes);\n        }\n      }\n    }\n  }\n\n  return result;\n};\n\nvar onTrap = function onTrap(event) {\n  if (activateTrap() && event) {\n    // prevent scroll jump\n    event.stopPropagation();\n    event.preventDefault();\n  }\n};\n\nvar onBlur = function onBlur() {\n  return deferAction(activateTrap);\n};\n\nvar onFocus = function onFocus(event) {\n  // detect portal\n  var source = event.target;\n  var currentNode = event.currentTarget;\n\n  if (!currentNode.contains(source)) {\n    recordPortal(currentNode, source);\n  }\n};\n\nvar FocusWatcher = function FocusWatcher() {\n  return null;\n};\n\nvar FocusTrap = function FocusTrap(_ref4) {\n  var children = _ref4.children;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onBlur: onBlur,\n    onFocus: onFocus\n  }, children);\n};\n\nFocusTrap.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: PropTypes.node.isRequired\n} : {};\n\nvar onWindowBlur = function onWindowBlur() {\n  focusWasOutsideWindow = 'just'; // using setTimeout to set  this variable after React/sidecar reaction\n\n  setTimeout(function () {\n    focusWasOutsideWindow = 'meanwhile';\n  }, 0);\n};\n\nvar attachHandler = function attachHandler() {\n  document.addEventListener('focusin', onTrap);\n  document.addEventListener('focusout', onBlur);\n  window.addEventListener('blur', onWindowBlur);\n};\n\nvar detachHandler = function detachHandler() {\n  document.removeEventListener('focusin', onTrap);\n  document.removeEventListener('focusout', onBlur);\n  window.removeEventListener('blur', onWindowBlur);\n};\n\nfunction reducePropsToState(propsList) {\n  return propsList.filter(function (_ref5) {\n    var disabled = _ref5.disabled;\n    return !disabled;\n  });\n}\n\nfunction handleStateChangeOnClient(traps) {\n  var trap = traps.slice(-1)[0];\n\n  if (trap && !lastActiveTrap) {\n    attachHandler();\n  }\n\n  var lastTrap = lastActiveTrap;\n  var sameTrap = lastTrap && trap && trap.id === lastTrap.id;\n  lastActiveTrap = trap;\n\n  if (lastTrap && !sameTrap) {\n    lastTrap.onDeactivation(); // return focus only of last trap was removed\n\n    if (!traps.filter(function (_ref6) {\n      var id = _ref6.id;\n      return id === lastTrap.id;\n    }).length) {\n      // allow defer is no other trap is awaiting restore\n      lastTrap.returnFocus(!trap);\n    }\n  }\n\n  if (trap) {\n    lastActiveFocus = null;\n\n    if (!sameTrap || lastTrap.observed !== trap.observed) {\n      trap.onActivation();\n    }\n\n    activateTrap(true);\n    deferAction(activateTrap);\n  } else {\n    detachHandler();\n    lastActiveFocus = null;\n  }\n} // bind medium\n\n\nmediumFocus.assignSyncMedium(onFocus);\nmediumBlur.assignMedium(onBlur);\nmediumEffect.assignMedium(function (cb) {\n  return cb({\n    moveFocusInside: moveFocusInside,\n    focusInside: focusInside\n  });\n});\nexport default withSideEffect(reducePropsToState, handleStateChangeOnClient)(FocusWatcher);","map":{"version":3,"sources":["C:/WEBDEV/Typing-Clone/Typing/client/node_modules/react-focus-lock/dist/es2015/Trap.js"],"names":["React","PropTypes","withSideEffect","moveFocusInside","focusInside","focusIsHidden","getFocusabledIn","deferAction","mediumFocus","mediumBlur","mediumEffect","focusOnBody","document","activeElement","body","isFreeFocus","lastActiveTrap","lastActiveFocus","lastPortaledElement","focusWasOutsideWindow","defaultWhitelist","focusWhitelisted","whiteList","recordPortal","observerNode","portaledElement","focusIsPortaledPair","element","autoGuard","startIndex","end","step","allNodes","lastGuard","i","item","guard","node","dataset","focusAutoGuard","lockItem","tabIndex","extractRef","ref","current","focusWasOutside","crossFrameOption","Boolean","checkInHost","check","el","boundary","host","contains","parentNode","withinHost","workingArea","some","area","activateTrap","result","_lastActiveTrap","observed","persistentFocus","autoFocus","shards","crossFrame","focusOptions","workingNode","concat","map","filter","blur","focus","newActiveElement","focusedIndex","_ref","indexOf","_ref2","forEach","_ref3","removeAttribute","length","onTrap","event","stopPropagation","preventDefault","onBlur","onFocus","source","target","currentNode","currentTarget","FocusWatcher","FocusTrap","_ref4","children","createElement","propTypes","process","env","NODE_ENV","isRequired","onWindowBlur","setTimeout","attachHandler","addEventListener","window","detachHandler","removeEventListener","reducePropsToState","propsList","_ref5","disabled","handleStateChangeOnClient","traps","trap","slice","lastTrap","sameTrap","id","onDeactivation","_ref6","returnFocus","onActivation","assignSyncMedium","assignMedium","cb"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withSideEffect from 'react-clientside-effect';\r\nimport moveFocusInside, { focusInside, focusIsHidden, getFocusabledIn } from 'focus-lock';\r\nimport { deferAction } from './util';\r\nimport { mediumFocus, mediumBlur, mediumEffect } from './medium';\r\n\r\nvar focusOnBody = function focusOnBody() {\r\n  return document && document.activeElement === document.body;\r\n};\r\n\r\nvar isFreeFocus = function isFreeFocus() {\r\n  return focusOnBody() || focusIsHidden();\r\n};\r\n\r\nvar lastActiveTrap = null;\r\nvar lastActiveFocus = null;\r\nvar lastPortaledElement = null;\r\nvar focusWasOutsideWindow = false;\r\n\r\nvar defaultWhitelist = function defaultWhitelist() {\r\n  return true;\r\n};\r\n\r\nvar focusWhitelisted = function focusWhitelisted(activeElement) {\r\n  return (lastActiveTrap.whiteList || defaultWhitelist)(activeElement);\r\n};\r\n\r\nvar recordPortal = function recordPortal(observerNode, portaledElement) {\r\n  lastPortaledElement = {\r\n    observerNode: observerNode,\r\n    portaledElement: portaledElement\r\n  };\r\n};\r\n\r\nvar focusIsPortaledPair = function focusIsPortaledPair(element) {\r\n  return lastPortaledElement && lastPortaledElement.portaledElement === element;\r\n};\r\n\r\nfunction autoGuard(startIndex, end, step, allNodes) {\r\n  var lastGuard = null;\r\n  var i = startIndex;\r\n\r\n  do {\r\n    var item = allNodes[i];\r\n\r\n    if (item.guard) {\r\n      if (item.node.dataset.focusAutoGuard) {\r\n        lastGuard = item;\r\n      }\r\n    } else if (item.lockItem) {\r\n      if (i !== startIndex) {\r\n        // we will tab to the next element\r\n        return;\r\n      }\r\n\r\n      lastGuard = null;\r\n    } else {\r\n      break;\r\n    }\r\n  } while ((i += step) !== end);\r\n\r\n  if (lastGuard) {\r\n    lastGuard.node.tabIndex = 0;\r\n  }\r\n}\r\n\r\nvar extractRef = function extractRef(ref) {\r\n  return ref && 'current' in ref ? ref.current : ref;\r\n};\r\n\r\nvar focusWasOutside = function focusWasOutside(crossFrameOption) {\r\n  if (crossFrameOption) {\r\n    // with cross frame return true for any value\r\n    return Boolean(focusWasOutsideWindow);\r\n  } // in other case return only of focus went a while aho\r\n\r\n\r\n  return focusWasOutsideWindow === 'meanwhile';\r\n};\r\n\r\nvar checkInHost = function checkInHost(check, el, boundary) {\r\n  return el // find host equal to active element and check nested active element\r\n  && (el.host === check && (!el.activeElement || boundary.contains(el.activeElement)) // dive up\r\n  || el.parentNode && checkInHost(check, el.parentNode, boundary));\r\n};\r\n\r\nvar withinHost = function withinHost(activeElement, workingArea) {\r\n  return workingArea.some(function (area) {\r\n    return checkInHost(activeElement, area, area);\r\n  });\r\n};\r\n\r\nvar activateTrap = function activateTrap() {\r\n  var result = false;\r\n\r\n  if (lastActiveTrap) {\r\n    var _lastActiveTrap = lastActiveTrap,\r\n        observed = _lastActiveTrap.observed,\r\n        persistentFocus = _lastActiveTrap.persistentFocus,\r\n        autoFocus = _lastActiveTrap.autoFocus,\r\n        shards = _lastActiveTrap.shards,\r\n        crossFrame = _lastActiveTrap.crossFrame,\r\n        focusOptions = _lastActiveTrap.focusOptions;\r\n    var workingNode = observed || lastPortaledElement && lastPortaledElement.portaledElement;\r\n    var activeElement = document && document.activeElement;\r\n\r\n    if (workingNode) {\r\n      var workingArea = [workingNode].concat(shards.map(extractRef).filter(Boolean));\r\n\r\n      if (!activeElement || focusWhitelisted(activeElement)) {\r\n        if (persistentFocus || focusWasOutside(crossFrame) || !isFreeFocus() || !lastActiveFocus && autoFocus) {\r\n          if (workingNode && !( // active element is \"inside\" working area\r\n          focusInside(workingArea) || // check for shadow-dom contained elements\r\n          activeElement && withinHost(activeElement, workingArea) || focusIsPortaledPair(activeElement, workingNode))) {\r\n            if (document && !lastActiveFocus && activeElement && !autoFocus) {\r\n              // Check if blur() exists, which is missing on certain elements on IE\r\n              if (activeElement.blur) {\r\n                activeElement.blur();\r\n              }\r\n\r\n              document.body.focus();\r\n            } else {\r\n              result = moveFocusInside(workingArea, lastActiveFocus, {\r\n                focusOptions: focusOptions\r\n              });\r\n              lastPortaledElement = {};\r\n            }\r\n          }\r\n\r\n          focusWasOutsideWindow = false;\r\n          lastActiveFocus = document && document.activeElement;\r\n        }\r\n      }\r\n\r\n      if (document) {\r\n        var newActiveElement = document && document.activeElement;\r\n        var allNodes = getFocusabledIn(workingArea);\r\n        var focusedIndex = allNodes.map(function (_ref) {\r\n          var node = _ref.node;\r\n          return node;\r\n        }).indexOf(newActiveElement);\r\n\r\n        if (focusedIndex > -1) {\r\n          // remove old focus\r\n          allNodes.filter(function (_ref2) {\r\n            var guard = _ref2.guard,\r\n                node = _ref2.node;\r\n            return guard && node.dataset.focusAutoGuard;\r\n          }).forEach(function (_ref3) {\r\n            var node = _ref3.node;\r\n            return node.removeAttribute('tabIndex');\r\n          });\r\n          autoGuard(focusedIndex, allNodes.length, +1, allNodes);\r\n          autoGuard(focusedIndex, -1, -1, allNodes);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nvar onTrap = function onTrap(event) {\r\n  if (activateTrap() && event) {\r\n    // prevent scroll jump\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nvar onBlur = function onBlur() {\r\n  return deferAction(activateTrap);\r\n};\r\n\r\nvar onFocus = function onFocus(event) {\r\n  // detect portal\r\n  var source = event.target;\r\n  var currentNode = event.currentTarget;\r\n\r\n  if (!currentNode.contains(source)) {\r\n    recordPortal(currentNode, source);\r\n  }\r\n};\r\n\r\nvar FocusWatcher = function FocusWatcher() {\r\n  return null;\r\n};\r\n\r\nvar FocusTrap = function FocusTrap(_ref4) {\r\n  var children = _ref4.children;\r\n  return /*#__PURE__*/React.createElement(\"div\", {\r\n    onBlur: onBlur,\r\n    onFocus: onFocus\r\n  }, children);\r\n};\r\n\r\nFocusTrap.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  children: PropTypes.node.isRequired\r\n} : {};\r\n\r\nvar onWindowBlur = function onWindowBlur() {\r\n  focusWasOutsideWindow = 'just'; // using setTimeout to set  this variable after React/sidecar reaction\r\n\r\n  setTimeout(function () {\r\n    focusWasOutsideWindow = 'meanwhile';\r\n  }, 0);\r\n};\r\n\r\nvar attachHandler = function attachHandler() {\r\n  document.addEventListener('focusin', onTrap);\r\n  document.addEventListener('focusout', onBlur);\r\n  window.addEventListener('blur', onWindowBlur);\r\n};\r\n\r\nvar detachHandler = function detachHandler() {\r\n  document.removeEventListener('focusin', onTrap);\r\n  document.removeEventListener('focusout', onBlur);\r\n  window.removeEventListener('blur', onWindowBlur);\r\n};\r\n\r\nfunction reducePropsToState(propsList) {\r\n  return propsList.filter(function (_ref5) {\r\n    var disabled = _ref5.disabled;\r\n    return !disabled;\r\n  });\r\n}\r\n\r\nfunction handleStateChangeOnClient(traps) {\r\n  var trap = traps.slice(-1)[0];\r\n\r\n  if (trap && !lastActiveTrap) {\r\n    attachHandler();\r\n  }\r\n\r\n  var lastTrap = lastActiveTrap;\r\n  var sameTrap = lastTrap && trap && trap.id === lastTrap.id;\r\n  lastActiveTrap = trap;\r\n\r\n  if (lastTrap && !sameTrap) {\r\n    lastTrap.onDeactivation(); // return focus only of last trap was removed\r\n\r\n    if (!traps.filter(function (_ref6) {\r\n      var id = _ref6.id;\r\n      return id === lastTrap.id;\r\n    }).length) {\r\n      // allow defer is no other trap is awaiting restore\r\n      lastTrap.returnFocus(!trap);\r\n    }\r\n  }\r\n\r\n  if (trap) {\r\n    lastActiveFocus = null;\r\n\r\n    if (!sameTrap || lastTrap.observed !== trap.observed) {\r\n      trap.onActivation();\r\n    }\r\n\r\n    activateTrap(true);\r\n    deferAction(activateTrap);\r\n  } else {\r\n    detachHandler();\r\n    lastActiveFocus = null;\r\n  }\r\n} // bind medium\r\n\r\n\r\nmediumFocus.assignSyncMedium(onFocus);\r\nmediumBlur.assignMedium(onBlur);\r\nmediumEffect.assignMedium(function (cb) {\r\n  return cb({\r\n    moveFocusInside: moveFocusInside,\r\n    focusInside: focusInside\r\n  });\r\n});\r\nexport default withSideEffect(reducePropsToState, handleStateChangeOnClient)(FocusWatcher);"]},"metadata":{},"sourceType":"module"}