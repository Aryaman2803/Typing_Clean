{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const navigate = useNavigate(); // const [email, setEmail] = useState('')\n  // const [password, setPassword] = useState('')\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState(false);\n  const {\n    email,\n    password\n  } = formData;\n\n  const onChange = e => {\n    setError(false);\n    setFormData(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const loginUser = async (email, password) => {\n    try {\n      const data = await axios.post('http://localhost:3000/api/login', {\n        email,\n        password\n      });\n      return data;\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      setError(true);\n      return;\n    }\n\n    const response = await loginUser(email, password);\n    console.log(response);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //TODO: install axios and set up post req\n    // await axios\n    //   .post('http://localhost:3000/api/login', {\n    //     email: email,\n    //     password: password,\n    //   })\n    //   .then((response) => {\n    //     const data = response.data\n    //     if (data.user) {\n    //       localStorage.setItem('token', data.user)\n    //       navigate(`/dashboard`)\n    //     } else {\n    //       alert('Please check the credentials')\n    //     }\n    //   })\n\n    const response = await loginUser(email, password); // if (response.data.status === 'ok') setToken(response.data.user)\n\n    if (response.data.status === 'ok') {\n      localStorage.setItem('token', response.data.user);\n      navigate('/dashboard');\n    } else alert('Please check the credentials');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Enter password\",\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please check the credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"SQiMZJgjC4bwDZvobHk6IDbEcco=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Login/Login.js"],"names":["axios","React","useState","useNavigate","PropTypes","Login","setToken","navigate","formData","setFormData","email","password","error","setError","onChange","e","prevState","target","name","value","loginUser","data","post","console","log","onSubmit","preventDefault","response","handleSubmit","status","localStorage","setItem","user","alert"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Login({ setToken }) {\r\n  const navigate = useNavigate()\r\n  // const [email, setEmail] = useState('')\r\n  // const [password, setPassword] = useState('')\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n  const [error, setError] = useState(false)\r\n  const { email, password } = formData\r\n\r\n  const onChange = (e) => {\r\n    setError(false)\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }))\r\n  }\r\n\r\n  const loginUser = async (email, password) => {\r\n    try {\r\n      const data = await axios.post('http://localhost:3000/api/login', {\r\n        email,\r\n        password,\r\n      })\r\n      return data\r\n    } catch (error) {\r\n      setError(true)\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (email === '' || password === '') {\r\n      setError(true)\r\n      return\r\n    }\r\n    const response = await loginUser(email, password)\r\n    console.log(response)\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    //TODO: install axios and set up post req\r\n    // await axios\r\n    //   .post('http://localhost:3000/api/login', {\r\n    //     email: email,\r\n    //     password: password,\r\n    //   })\r\n    //   .then((response) => {\r\n    //     const data = response.data\r\n    //     if (data.user) {\r\n    //       localStorage.setItem('token', data.user)\r\n    //       navigate(`/dashboard`)\r\n    //     } else {\r\n    //       alert('Please check the credentials')\r\n    //     }\r\n    //   })\r\n    const response = await loginUser(email, password)\r\n    // if (response.data.status === 'ok') setToken(response.data.user)\r\n    if (response.data.status === 'ok') {\r\n      localStorage.setItem('token', response.data.user)\r\n      navigate('/dashboard')\r\n    } else alert('Please check the credentials')\r\n  }\r\n  return (\r\n    <section>\r\n      <h3>Login</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type='email'\r\n          name='email'\r\n          placeholder='Enter email'\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='password'\r\n          name='password'\r\n          placeholder='Enter password'\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <button type='submit'> Login</button>\r\n      </form>\r\n      {error && <p>Please check the credentials</p>}\r\n\r\n      {/* <form>\r\n        <label>Email</label>\r\n        <input type='text' onChange={(e) => setEmail(e.target.value)} />\r\n        <label>Passowrd</label>\r\n        <input type='password' onChange={(e) => setPassword(e.target.value)} />\r\n        <button onClick={handleSubmit}>Submit</button>\r\n      </form> */}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}