{"ast":null,"code":"import _asyncToGenerator from\"C:/WEBDEV/Typing/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/WEBDEV/Typing/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\WEBDEV\\\\Typing\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useContext,useEffect,useRef,useState}from'react';import{useNavigate,useParams}from'react-router-dom';import{Dialog}from'@reach/dialog';import'@reach/dialog/styles.css';import axios from'axios';import userNotesContext from'../../Context/userNotesContext';import'./Dashboard.css';import{convertFromRaw,convertToRaw,EditorState}from'draft-js';import ModalEditor from'../../Hooks/ModalEditor';import Toolbar from'../../Hooks/Toolbar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Modal=function Modal(){var navigate=useNavigate();var _useParams=useParams(),id=_useParams.id;var buttonRef=useRef(null);var _useContext=useContext(userNotesContext),CheckIfNoteUpdated=_useContext.CheckIfNoteUpdated,setCheckIfNoteUpdated=_useContext.setCheckIfNoteUpdated;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),CheckIfNoteIsEdited=_useState2[0],setCheckIfNoteIsEdited=_useState2[1];var _useState3=useState(function(){return EditorState.createEmpty();}),_useState4=_slicedToArray(_useState3,2),editorStateTitle=_useState4[0],setEditorStateTitle=_useState4[1];var _useState5=useState(function(){return EditorState.createEmpty();}),_useState6=_slicedToArray(_useState5,2),editorStateBody=_useState6[0],setEditorStateBody=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),updatedAt=_useState8[0],setUpdatedAt=_useState8[1];var onDismiss=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(CheckIfNoteIsEdited&&(editorStateTitle.getCurrentContent().hasText()||editorStateBody.getCurrentContent().hasText()))){_context.next=7;break;}_context.next=3;return axios.put(\"https://typingmernapp.herokuapp.com/api/dashboard/notes/\".concat(id),{title:JSON.stringify(convertToRaw(editorStateTitle.getCurrentContent())),body:JSON.stringify(convertToRaw(editorStateBody.getCurrentContent()))});case 3:setCheckIfNoteUpdated(true);setCheckIfNoteIsEdited(false);_context.next=13;break;case 7:if(!(CheckIfNoteIsEdited&&!editorStateTitle.getCurrentContent().hasText()&&!editorStateBody.getCurrentContent().hasText())){_context.next=13;break;}_context.next=10;return axios.delete(\"https://typingmernapp.herokuapp.com/api/dashboard/notes/\".concat(id));case 10:setCheckIfNoteUpdated(true);setCheckIfNoteIsEdited(false);console.log('deleted');case 13:navigate(-1);case 14:case\"end\":return _context.stop();}}},_callee);}));return function onDismiss(){return _ref.apply(this,arguments);};}();var fetchNote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"https://typingmernapp.herokuapp.com/api/dashboard/\".concat(id),{withCredentials:true});case 3:response=_context2.sent;if((response===null||response===void 0?void 0:response.status)===200){setEditorStateTitle(EditorState.createWithContent(convertFromRaw(JSON.parse(response===null||response===void 0?void 0:response.data.note.title))));setEditorStateBody(EditorState.createWithContent(convertFromRaw(JSON.parse(response===null||response===void 0?void 0:response.data.note.body))));setUpdatedAt(response===null||response===void 0?void 0:response.data.note.updatedAt);}_context2.next=11;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);console.log('error from dashboard js file',_context2.t0);navigate('/login');case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function fetchNote(_x){return _ref2.apply(this,arguments);};}();var handleDelete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.delete(\"https://typingmernapp.herokuapp.com/api/dashboard/notes/\".concat(id));case 2:setCheckIfNoteUpdated(true);navigate(-1);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function handleDelete(){return _ref3.apply(this,arguments);};}();useEffect(function(){fetchNote(id);},[]);if(!id)return null;return/*#__PURE__*/_jsx(Dialog,{\"aria-labelledby\":\"label\",className:\"modal-wrapper\",onDismiss:onDismiss,initialFocusRef:buttonRef,onClick:function onClick(e){return e.stopPropagation();},children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-wrapper-inner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-edit-title\",children:/*#__PURE__*/_jsx(ModalEditor,{editorState:editorStateTitle,setEditorState:setEditorStateTitle,showToolbar:false,placeholderText:'Title',setCheckIfNoteIsEdited:setCheckIfNoteIsEdited,isReadOnly:false})}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-edit-body sc1\",children:/*#__PURE__*/_jsx(ModalEditor,{editorState:editorStateBody,setEditorState:setEditorStateBody,showToolbar:true,placeholderText:'Body',setCheckIfNoteIsEdited:setCheckIfNoteIsEdited,isReadOnly:false})}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-toolbar\",children:/*#__PURE__*/_jsx(Toolbar,{editorState:editorStateBody,setEditorState:setEditorStateBody,switchFor:'modaleditor',handleDelete:handleDelete,updatedAt:updatedAt})})]})});};export default Modal;","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Modal.js"],"names":["React","useContext","useEffect","useRef","useState","useNavigate","useParams","Dialog","axios","userNotesContext","convertFromRaw","convertToRaw","EditorState","ModalEditor","Toolbar","Modal","navigate","id","buttonRef","CheckIfNoteUpdated","setCheckIfNoteUpdated","CheckIfNoteIsEdited","setCheckIfNoteIsEdited","createEmpty","editorStateTitle","setEditorStateTitle","editorStateBody","setEditorStateBody","updatedAt","setUpdatedAt","onDismiss","getCurrentContent","hasText","put","title","JSON","stringify","body","delete","console","log","fetchNote","get","withCredentials","response","status","createWithContent","parse","data","note","handleDelete","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { Dialog } from '@reach/dialog'\r\nimport '@reach/dialog/styles.css'\r\nimport axios from 'axios'\r\nimport userNotesContext from '../../Context/userNotesContext'\r\nimport './Dashboard.css'\r\nimport { convertFromRaw, convertToRaw, EditorState } from 'draft-js'\r\nimport ModalEditor from '../../Hooks/ModalEditor'\r\nimport Toolbar from '../../Hooks/Toolbar'\r\n\r\nconst Modal = () => {\r\n  let navigate = useNavigate()\r\n  let { id } = useParams()\r\n  let buttonRef = useRef(null)\r\n  const { CheckIfNoteUpdated, setCheckIfNoteUpdated } =\r\n    useContext(userNotesContext)\r\n\r\n  const [CheckIfNoteIsEdited, setCheckIfNoteIsEdited] = useState(false)\r\n  const [editorStateTitle, setEditorStateTitle] = useState(() =>\r\n    EditorState.createEmpty()\r\n  )\r\n  const [editorStateBody, setEditorStateBody] = useState(() =>\r\n    EditorState.createEmpty()\r\n  )\r\n  const [updatedAt, setUpdatedAt] = useState('')\r\n\r\n  const onDismiss = async () => {\r\n    if (\r\n      CheckIfNoteIsEdited &&\r\n      (editorStateTitle.getCurrentContent().hasText() ||\r\n        editorStateBody.getCurrentContent().hasText())\r\n    ) {\r\n      await axios.put(`https://typingmernapp.herokuapp.com/api/dashboard/notes/${id}`, {\r\n        title: JSON.stringify(\r\n          convertToRaw(editorStateTitle.getCurrentContent())\r\n        ),\r\n        body: JSON.stringify(convertToRaw(editorStateBody.getCurrentContent())),\r\n      })\r\n      setCheckIfNoteUpdated(true)\r\n      setCheckIfNoteIsEdited(false)\r\n    } else if (\r\n      CheckIfNoteIsEdited &&\r\n      !editorStateTitle.getCurrentContent().hasText() &&\r\n      !editorStateBody.getCurrentContent().hasText()\r\n    ) {\r\n      await axios.delete(`https://typingmernapp.herokuapp.com/api/dashboard/notes/${id}`)\r\n      setCheckIfNoteUpdated(true)\r\n      setCheckIfNoteIsEdited(false)\r\n      console.log('deleted')\r\n    }\r\n    navigate(-1)\r\n  }\r\n\r\n  const fetchNote = async (id) => {\r\n    try {\r\n      const response = await axios.get(`https://typingmernapp.herokuapp.com/api/dashboard/${id}`, {\r\n        withCredentials: true,\r\n      })\r\n      if (response?.status === 200) {\r\n        setEditorStateTitle(\r\n          EditorState.createWithContent(\r\n            convertFromRaw(JSON.parse(response?.data.note.title))\r\n          )\r\n        )\r\n        setEditorStateBody(\r\n          EditorState.createWithContent(\r\n            convertFromRaw(JSON.parse(response?.data.note.body))\r\n          )\r\n        )\r\n        setUpdatedAt(response?.data.note.updatedAt)\r\n      }\r\n    } catch (err) {\r\n      console.log('error from dashboard js file', err)\r\n      navigate('/login')\r\n    }\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    await axios.delete(`https://typingmernapp.herokuapp.com/api/dashboard/notes/${id}`)\r\n    setCheckIfNoteUpdated(true)\r\n    navigate(-1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchNote(id)\r\n  }, [])\r\n\r\n  if (!id) return null\r\n  return (\r\n    <Dialog\r\n      aria-labelledby='label'\r\n      className='modal-wrapper'\r\n      onDismiss={onDismiss}\r\n      initialFocusRef={buttonRef}\r\n      onClick={(e) => e.stopPropagation()}\r\n    >\r\n      <div className='modal-wrapper-inner'>\r\n        <div className='modal-edit-title'>\r\n          <ModalEditor\r\n            editorState={editorStateTitle}\r\n            setEditorState={setEditorStateTitle}\r\n            showToolbar={false}\r\n            placeholderText={'Title'}\r\n            setCheckIfNoteIsEdited={setCheckIfNoteIsEdited}\r\n            isReadOnly={false}\r\n          />\r\n        </div>\r\n        <div className='modal-edit-body sc1'>\r\n          <ModalEditor\r\n            editorState={editorStateBody}\r\n            setEditorState={setEditorStateBody}\r\n            showToolbar={true}\r\n            placeholderText={'Body'}\r\n            setCheckIfNoteIsEdited={setCheckIfNoteIsEdited}\r\n            isReadOnly={false}\r\n          />\r\n        </div>\r\n        <div className='modal-toolbar'>\r\n          <Toolbar\r\n            editorState={editorStateBody}\r\n            setEditorState={setEditorStateBody}\r\n            switchFor={'modaleditor'}\r\n            handleDelete={handleDelete}\r\n            updatedAt={updatedAt}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n"]},"metadata":{},"sourceType":"module"}