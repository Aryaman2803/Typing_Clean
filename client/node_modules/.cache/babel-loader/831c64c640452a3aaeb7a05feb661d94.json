{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Dialog } from '@reach/dialog';\nimport '@reach/dialog/styles.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = () => {\n  _s();\n\n  let navigate = useNavigate();\n  let {\n    id\n  } = useParams();\n  let buttonRef = useRef(null);\n\n  function onDismiss() {\n    navigate(-1);\n  }\n\n  const [Note, setNote] = useState();\n\n  const fetchNote = async id => {\n    try {\n      const response = await axios.get('/api/dashboard/', {\n        withCredentials: true\n      });\n\n      if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n        setNote(response);\n        console.log('printing resonse', response);\n      }\n    } catch (err) {\n      console.log('error from dashboard js file', err);\n      navigate('/login');\n    }\n  };\n\n  useEffect(() => {\n    fetchNote(id);\n  }, []);\n  if (!id) return null;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    \"aria-labelledby\": \"label\",\n    onDismiss: onDismiss,\n    initialFocusRef: buttonRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        justifyContent: 'center',\n        padding: '8px 8px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Modal, \"ZT5KyegjW59Ai6CWPgrZBa2IH6k=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Modal.js"],"names":["React","useEffect","useRef","useState","useNavigate","useParams","Dialog","axios","Modal","navigate","id","buttonRef","onDismiss","Note","setNote","fetchNote","response","get","withCredentials","status","console","log","err","display","justifyContent","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAO,0BAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,MAAIC,QAAQ,GAAGL,WAAW,EAA1B;AACA,MAAI;AAAEM,IAAAA;AAAF,MAASL,SAAS,EAAtB;AACA,MAAIM,SAAS,GAAGT,MAAM,CAAC,IAAD,CAAtB;;AAEA,WAASU,SAAT,GAAqB;AACnBH,IAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACD;;AAEH,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;;AACE,QAAMY,SAAS,GAAC,MAAML,EAAN,IAAW;AACzB,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,iBAAV,EAA6B;AAClDC,QAAAA,eAAe,EAAE;AADiC,OAA7B,CAAvB;;AAGA,UAAI,CAAAF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEG,MAAV,MAAqB,GAAzB,EAA8B;AAC5BL,QAAAA,OAAO,CAACE,QAAD,CAAP;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,QAAhC;AACD;AACF,KARD,CAQE,OAAOM,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CC,GAA5C;AACAb,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;AACF,GAbD;;AAcAR,EAAAA,SAAS,CAAC,MAAI;AACZc,IAAAA,SAAS,CAACL,EAAD,CAAT;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,MAAI,CAACA,EAAL,EAAS,OAAO,IAAP;AACT,sBACE,QAAC,MAAD;AACE,uBAAgB,OADlB;AAEE,IAAA,SAAS,EAAEE,SAFb;AAGE,IAAA,eAAe,EAAED,SAHnB;AAAA,2BAKE;AACE,MAAA,KAAK,EAAE;AACLY,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,cAAc,EAAE,QAFX;AAGLC,QAAAA,OAAO,EAAE;AAHJ;AADT;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA5CD;;GAAMjB,K;UACWJ,W,EACFC,S;;;KAFTG,K;AA8CN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { Dialog } from '@reach/dialog'\r\nimport '@reach/dialog/styles.css'\r\nimport axios from 'axios'\r\nconst Modal = () => {\r\n  let navigate = useNavigate()\r\n  let { id } = useParams()\r\n  let buttonRef = useRef(null)\r\n\r\n  function onDismiss() {\r\n    navigate(-1)\r\n  }\r\n\r\nconst [Note, setNote] = useState()\r\n  const fetchNote=async(id)=>{\r\n    try {\r\n      const response = await axios.get('/api/dashboard/', {\r\n        withCredentials: true,\r\n      })\r\n      if (response?.status === 200) {\r\n        setNote(response)\r\n        console.log('printing resonse', response)\r\n      }\r\n    } catch (err) {\r\n      console.log('error from dashboard js file', err)\r\n      navigate('/login')\r\n    }\r\n  } \r\n  useEffect(()=>{\r\n    fetchNote(id)\r\n  },[])\r\n\r\n  if (!id) return null\r\n  return (\r\n    <Dialog\r\n      aria-labelledby='label'\r\n      onDismiss={onDismiss}\r\n      initialFocusRef={buttonRef}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'grid',\r\n          justifyContent: 'center',\r\n          padding: '8px 8px',\r\n        }}\r\n      ></div>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n"]},"metadata":{},"sourceType":"module"}