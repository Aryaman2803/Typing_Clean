{"ast":null,"code":"import React from'react';import{Editor,RichUtils}from'draft-js';import'draft-js/dist/Draft.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ModalEditor=function ModalEditor(_ref){var editorState=_ref.editorState,setEditorState=_ref.setEditorState,setCheckIfNoteIsEdited=_ref.setCheckIfNoteIsEdited,placeholderText=_ref.placeholderText,isReadOnly=_ref.isReadOnly;var handleKeyCommand=function handleKeyCommand(command,editorState){var newState=RichUtils.handleKeyCommand(editorState,command);if(newState){setEditorState(newState);setCheckIfNoteIsEdited(true);}};var onChange=function onChange(newState){var currentContentState=editorState.getCurrentContent();var newContentState=newState.getCurrentContent();setEditorState(newState);if(currentContentState!==newContentState){setCheckIfNoteIsEdited(true);}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Editor,{editorState:editorState,onChange:onChange,placeholder:placeholderText,handleKeyCommand:handleKeyCommand,readOnly:isReadOnly})});};export default ModalEditor;","map":{"version":3,"sources":["C:/WEBDEV/Typing-Clone/Typing/client/src/Hooks/ModalEditor.js"],"names":["React","Editor","RichUtils","ModalEditor","editorState","setEditorState","setCheckIfNoteIsEdited","placeholderText","isReadOnly","handleKeyCommand","command","newState","onChange","currentContentState","getCurrentContent","newContentState"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,SAAjB,KAAkC,UAAlC,CACA,MAAO,yBAAP,C,gGAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAMd,IALJC,CAAAA,WAKI,MALJA,WAKI,CAJJC,cAII,MAJJA,cAII,CAHJC,sBAGI,MAHJA,sBAGI,CAFJC,eAEI,MAFJA,eAEI,CADJC,UACI,MADJA,UACI,CACJ,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,OAAD,CAAUN,WAAV,CAA0B,CACjD,GAAMO,CAAAA,QAAQ,CAAGT,SAAS,CAACO,gBAAV,CAA2BL,WAA3B,CAAwCM,OAAxC,CAAjB,CACA,GAAIC,QAAJ,CAAc,CACZN,cAAc,CAACM,QAAD,CAAd,CACAL,sBAAsB,CAAC,IAAD,CAAtB,CACD,CACF,CAND,CAQA,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACD,QAAD,CAAc,CAC7B,GAAME,CAAAA,mBAAmB,CAAGT,WAAW,CAACU,iBAAZ,EAA5B,CACA,GAAMC,CAAAA,eAAe,CAAGJ,QAAQ,CAACG,iBAAT,EAAxB,CACAT,cAAc,CAACM,QAAD,CAAd,CACA,GAAIE,mBAAmB,GAAKE,eAA5B,CAA6C,CAC3CT,sBAAsB,CAAC,IAAD,CAAtB,CACD,CACF,CAPD,CAQA,mBACE,sCACE,KAAC,MAAD,EACE,WAAW,CAAEF,WADf,CAEE,QAAQ,CAAEQ,QAFZ,CAGE,WAAW,CAAEL,eAHf,CAIE,gBAAgB,CAAEE,gBAJpB,CAKE,QAAQ,CAAED,UALZ,EADF,EADF,CAWD,CAlCD,CAoCA,cAAeL,CAAAA,WAAf","sourcesContent":["import React from 'react'\r\nimport { Editor, RichUtils } from 'draft-js'\r\nimport 'draft-js/dist/Draft.css'\r\n\r\nconst ModalEditor = ({\r\n  editorState,\r\n  setEditorState,\r\n  setCheckIfNoteIsEdited,\r\n  placeholderText,\r\n  isReadOnly,\r\n}) => {\r\n  const handleKeyCommand = (command, editorState) => {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command)\r\n    if (newState) {\r\n      setEditorState(newState)\r\n      setCheckIfNoteIsEdited(true)\r\n    }\r\n  }\r\n\r\n  const onChange = (newState) => {\r\n    const currentContentState = editorState.getCurrentContent()\r\n    const newContentState = newState.getCurrentContent()\r\n    setEditorState(newState)\r\n    if (currentContentState !== newContentState) {\r\n      setCheckIfNoteIsEdited(true)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Editor\r\n        editorState={editorState}\r\n        onChange={onChange}\r\n        placeholder={placeholderText}\r\n        handleKeyCommand={handleKeyCommand}\r\n        readOnly={isReadOnly}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ModalEditor\r\n"]},"metadata":{},"sourceType":"module"}