{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, FormControl, Grid, TextField, InputLabel, Input, FormHelperText } from '@mui/material';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport LockIcon from '@mui/icons-material/Lock';\nimport LoginIcon from '@mui/icons-material/Login';\nimport { width } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const navigate = useNavigate(); // const [email, setEmail] = useState('')\n  // const [password, setPassword] = useState('')\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const {\n    email,\n    password\n  } = formData;\n\n  const onChange = e => {\n    setError('');\n    setFormData(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const loginUser = async (email, password) => {\n    try {\n      const data = await axios.post('http://localhost:3000/api/login', {\n        email,\n        password\n      });\n      return data;\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      setEmailError(true);\n      setPasswordError(true);\n      setError('Please enter all fields');\n      return;\n    }\n\n    const response = await loginUser(email, password);\n    console.log(response);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //TODO: install axios and set up post req\n    // await axios\n    //   .post('http://localhost:3000/api/login', {\n    //     email: email,\n    //     password: password,\n    //   })\n    //   .then((response) => {\n    //     const data = response.data\n    //     if (data.user) {\n    //       localStorage.setItem('token', data.user)\n    //       navigate(`/dashboard`)\n    //     } else {\n    //       alert('Please check the credentials')\n    //     }\n    //   })\n\n    const response = await loginUser(email, password); // if (response.data.status === 'ok') setToken(response.data.user)\n\n    if (response.data.status === 'ok') {\n      localStorage.setItem('token', response.data.user);\n      navigate('/dashboard');\n    } else alert('Please check the credentials');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      boxSizing: 'border-box',\n      minHeight: '100vh',\n      display: 'flex',\n      border: '3px solid red',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        sx: {\n          width: {\n            xs: 350,\n            sm: 400\n          },\n          height: {\n            xs: 500,\n            sm: 500\n          }\n        },\n        style: {\n          border: '3px solid teal'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            error: emailError,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"my-input\",\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"my-input\",\n              \"aria-describedby\": \"my-helper-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              id: \"my-helper-text\",\n              style: {\n                display: 'none'\n              },\n              children: \"Invalid email.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"input-with-icon-textfield\",\n              label: \"Email\",\n              type: \"email\",\n              sx: {\n                mx: 'auto',\n                width: {\n                  sm: 300,\n                  lg: 300\n                },\n                p: 0.5,\n                m: 1\n              },\n              error: error !== '',\n              name: \"email\",\n              value: email,\n              onChange: onChange,\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)\n              },\n              variant: \"standard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              mx: 'auto',\n              width: {\n                sm: 300,\n                lg: 300\n              },\n              p: 0.5,\n              m: 1\n            },\n            id: \"input-with-icon-textfield\",\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: onChange,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            },\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            size: \"medium\",\n            variant: \"contained\",\n            endIcon: /*#__PURE__*/_jsxDEV(LoginIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 24\n            }, this),\n            sx: {\n              width: 120,\n              mt: 2\n            } // disabled={!email || !password}\n            ,\n            children: [\"Login\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"ChdCV/9um46qiRB/g+C1gVHuIm0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Login/Login.js"],"names":["axios","React","useState","useNavigate","PropTypes","Button","FormControl","Grid","TextField","InputLabel","Input","FormHelperText","InputAdornment","AccountCircle","LockIcon","LoginIcon","width","Login","setToken","navigate","formData","setFormData","email","password","error","setError","emailError","setEmailError","passwordError","setPasswordError","onChange","e","prevState","target","name","value","loginUser","data","post","response","message","onSubmit","preventDefault","console","log","handleSubmit","status","localStorage","setItem","user","alert","boxSizing","minHeight","display","border","justifyContent","alignItems","xs","sm","height","mx","lg","p","m","startAdornment","mt"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, FormControl, Grid, TextField ,InputLabel, Input, FormHelperText} from '@mui/material'\r\nimport InputAdornment from '@mui/material/InputAdornment'\r\nimport AccountCircle from '@mui/icons-material/AccountCircle'\r\nimport LockIcon from '@mui/icons-material/Lock'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\nimport { width } from '@mui/system'\r\n\r\nfunction Login({ setToken }) {\r\n  const navigate = useNavigate()\r\n  // const [email, setEmail] = useState('')\r\n  // const [password, setPassword] = useState('')\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n  const [error, setError] = useState('')\r\n  const[emailError,setEmailError] = useState(false)\r\n  const[passwordError,setPasswordError] = useState(false)\r\n\r\n  const { email, password } = formData\r\n  const onChange = (e) => {\r\n    setError('')\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }))\r\n  }\r\n\r\n  const loginUser = async (email, password) => {\r\n    try {\r\n      const data = await axios.post('http://localhost:3000/api/login', {\r\n        email,\r\n        password,\r\n      })\r\n      return data\r\n    } catch (error) {\r\n      setError(error.response.data.message)\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (email === '' || password === '') {\r\n      setEmailError(true)\r\n      setPasswordError(true)\r\n      setError('Please enter all fields')\r\n      return\r\n    }\r\n    const response = await loginUser(email, password)\r\n    console.log(response)\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    //TODO: install axios and set up post req\r\n    // await axios\r\n    //   .post('http://localhost:3000/api/login', {\r\n    //     email: email,\r\n    //     password: password,\r\n    //   })\r\n    //   .then((response) => {\r\n    //     const data = response.data\r\n    //     if (data.user) {\r\n    //       localStorage.setItem('token', data.user)\r\n    //       navigate(`/dashboard`)\r\n    //     } else {\r\n    //       alert('Please check the credentials')\r\n    //     }\r\n    //   })\r\n    const response = await loginUser(email, password)\r\n    // if (response.data.status === 'ok') setToken(response.data.user)\r\n    if (response.data.status === 'ok') {\r\n      localStorage.setItem('token', response.data.user)\r\n      navigate('/dashboard')\r\n    } else alert('Please check the credentials')\r\n  }\r\n  \r\n  return (\r\n    <section\r\n      style={{\r\n        boxSizing: 'border-box',\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        border: '3px solid red',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <form>\r\n        <Grid\r\n          container\r\n          direction='column'\r\n          alignItems='center'\r\n          justifyContent='center'\r\n          sx={{\r\n            width: {\r\n              xs: 350,\r\n              sm: 400,\r\n            },\r\n            height: {\r\n              xs: 500,\r\n              sm: 500,\r\n            },\r\n          }}\r\n          style={{ border: '3px solid teal' }}\r\n        >\r\n          <h1>Login</h1>\r\n          <Grid container direction='column' alignItems='center'>\r\n          <FormControl error={emailError}>\r\n  <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\r\n  <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n  <FormHelperText id=\"my-helper-text\" style={{display:'none'}}>Invalid email.</FormHelperText>\r\n</FormControl>\r\n           <FormControl>\r\n           <TextField\r\n              id='input-with-icon-textfield'\r\n              label='Email'\r\n              type='email'\r\n              sx={{\r\n                mx: 'auto',\r\n                width: {\r\n                  sm: 300,\r\n                  lg: 300,\r\n                },\r\n                p: 0.5,\r\n                m: 1,\r\n              }}\r\n              error={error !== ''}\r\n              name='email'\r\n              value={email}\r\n              onChange={onChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position='start'>\r\n                    <AccountCircle />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              variant='standard'\r\n            />\r\n           </FormControl>\r\n            <TextField\r\n              sx={{\r\n                mx: 'auto',\r\n                width: {\r\n                  sm: 300,\r\n                  lg: 300,\r\n                },\r\n                p: 0.5,\r\n                m: 1,\r\n              }}\r\n              id='input-with-icon-textfield'\r\n              label='Password'\r\n              name='password'\r\n              type='password'\r\n              value={password}\r\n              onChange={onChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position='start'>\r\n                    <LockIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              variant='standard'\r\n            />\r\n            <Button\r\n              type='submit'\r\n              size='medium'\r\n              variant='contained'\r\n              endIcon={<LoginIcon />}\r\n              sx={{ width: 120, mt: 2 }}\r\n              // disabled={!email || !password}\r\n            >\r\n              Login{' '}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {/* <form onSubmit={onSubmit}>\r\n        <input\r\n          type='email'\r\n          name='email'\r\n          placeholder='Enter email'\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='password'\r\n          name='password'\r\n          placeholder='Enter password'\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        {/* <Button variant='contained'>Hello World</Button>; */}\r\n      {/* <button type='submit'> Login</button> }\r\n      </form> */}\r\n      {error}\r\n      {/* <form>\r\n        <label>Email</label>\r\n        <input type='text' onChange={(e) => setEmail(e.target.value)} />\r\n        <label>Passowrd</label>\r\n        <input type='password' onChange={(e) => setPassword(e.target.value)} />\r\n        <button onClick={handleSubmit}>Submit</button>\r\n      </form> */}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}