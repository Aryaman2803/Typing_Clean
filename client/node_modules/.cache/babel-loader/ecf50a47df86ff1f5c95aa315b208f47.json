{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\helpers\\\\protectedRoutes.js\";\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProtectedRoutes(_ref) {\n  let {\n    component: Component,\n    ...restOfProps\n  } = _ref;\n  const isAuthenticated = localStorage.getItem('token');\n  console.log('this', isAuthenticated);\n  return /*#__PURE__*/_jsxDEV(Route, { ...restOfProps,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/helpers/protectedRoutes.js"],"names":["React","Route","Navigate","ProtectedRoutes","component","Component","restOfProps","isAuthenticated","localStorage","getItem","console","log","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,SAASC,eAAT,OAAmE;AAAA,MAA1C;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAA0C;AACjE,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,eAApB;AACA,sBACE,QAAC,KAAD,OACMD,WADN;AAEE,IAAA,MAAM,EAAGM,KAAD,IACNL,eAAe,gBAAG,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA8B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHjD;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAXQT,e;AAYT,eAAeA,eAAf","sourcesContent":["import React from 'react'\r\nimport { Route, Navigate } from 'react-router-dom'\r\n\r\nfunction ProtectedRoutes({ component: Component, ...restOfProps }) {\r\n  const isAuthenticated = localStorage.getItem('token')\r\n  console.log('this', isAuthenticated)\r\n  return (\r\n    <Route\r\n      {...restOfProps}\r\n      render={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Navigate to='/login' />\r\n      }\r\n    />\r\n  )\r\n}\r\nexport default ProtectedRoutes\r\n"]},"metadata":{},"sourceType":"module"}