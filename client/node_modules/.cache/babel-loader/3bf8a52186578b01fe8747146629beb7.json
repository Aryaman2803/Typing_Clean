{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport './Dashboard.css';\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useNavigate, Outlet, Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { useTheme } from '@mui/material/styles';\nimport Navbar from './Navbar';\nimport Note from './Note';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Modal from './Modal';\nimport userNotesContext from '../../Context/userNotesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const theme = useTheme();\n  let location = useLocation();\n  const navigate = useNavigate();\n  const [Notes, setNotes] = useState();\n\n  const verifyUser = async () => {\n    try {\n      const response = await axios.get('/api/dashboard/', {\n        withCredentials: true\n      });\n\n      if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n        var _response$data;\n\n        setNotes(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.notes);\n      }\n    } catch (err) {\n      console.log('error from dashboard js file', err);\n      navigate('/login');\n    }\n  };\n\n  useEffect(() => {\n    verifyUser();\n  }, []);\n  const {\n    CheckIfNoteUpdated,\n    setCheckIfNoteUpdated\n  } = useContext(userNotesContext);\n  useEffect(() => {\n    console.log('inside USEEFFECT OF DASHBOARD', CheckIfNoteUpdated);\n    if (CheckIfNoteUpdated) setCheckIfNoteUpdated(false);\n  }, [CheckIfNoteUpdated]);\n  const Item = styled(Paper)(_ref => {\n    let {\n      theme\n    } = _ref;\n    return {\n      backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n      ...theme.typography.body2,\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(userNotesContext.Provider, {\n    value: {\n      setCheckIfNoteUpdated\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notes-container\",\n        children: Notes === null || Notes === void 0 ? void 0 : Notes.map(note => {\n          return (\n            /*#__PURE__*/\n            // <Link\n            //   to={`/api/dashboard/${note._id}`}\n            //   key={note._id}\n            //   state={{ background: location }}\n            //   style={null}\n            // >\n            _jsxDEV(Note, {\n              note: note\n            }, note._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this) //  </Link>\n\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this); // return (\n  //   <>\n  //     <Navbar />\n  //     <div className='notes-wrapper'>\n  //       <Box sx={{ flexGrow: 1 }}>\n  //         <Grid\n  //           container\n  //           spacing={{ xs: 2, md: 3 }}\n  //           columns={{ xs: 4, sm: 8, md: 12 }}\n  //         >\n  //           {Notes?.map((note) => {\n  //             return (\n  //               <Grid item xs={2} sm={4} md={4} key={note._id}>\n  //                 <Item>\n  //                  <Note note={note}/>\n  //                 </Item>\n  //               </Grid>\n  //             )\n  //           })}\n  //         </Grid>\n  //       </Box>\n  //       <hr />\n  //       aqdr\n  //       {/* <div style={{height:'150px' ,width:'150px' ,borderRadius:\"10px\", display:'flex', justifyContent:'center', border:'10px solid red'}}> */}\n  //       {/* </div> */}\n  //     </div>\n  //     {/* <Outlet /> */}\n  //   </>\n  // )\n}\n\n_s(Dashboard, \"jSVeHAELLiW+klVe2jvT/gjDlaE=\", false, function () {\n  return [useTheme, useLocation, useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Dashboard.js"],"names":["React","createContext","useContext","useEffect","useState","useNavigate","Outlet","Link","useLocation","axios","useTheme","Navbar","Note","experimentalStyled","styled","Box","Paper","Grid","Modal","userNotesContext","Dashboard","theme","location","navigate","Notes","setNotes","verifyUser","response","get","withCredentials","status","data","notes","err","console","log","CheckIfNoteUpdated","setCheckIfNoteUpdated","Item","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","map","note","_id"],"mappings":"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","sourcesContent":["import './Dashboard.css'\r\nimport React, { createContext, useContext, useEffect, useState } from 'react'\r\nimport { useNavigate, Outlet, Link, useLocation } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport Navbar from './Navbar'\r\nimport Note from './Note'\r\nimport { experimentalStyled as styled } from '@mui/material/styles'\r\nimport Box from '@mui/material/Box'\r\nimport Paper from '@mui/material/Paper'\r\nimport Grid from '@mui/material/Grid'\r\nimport Modal from './Modal'\r\nimport userNotesContext from '../../Context/userNotesContext'\r\n\r\nfunction Dashboard() {\r\n  const theme = useTheme()\r\n  let location = useLocation()\r\n  const navigate = useNavigate()\r\n  const [Notes, setNotes] = useState()\r\n  const verifyUser = async () => {\r\n    try {\r\n      const response = await axios.get('/api/dashboard/', {\r\n        withCredentials: true,\r\n      })\r\n      if (response?.status === 200) {\r\n        setNotes(response?.data?.notes)\r\n      }\r\n    } catch (err) {\r\n      console.log('error from dashboard js file', err)\r\n      navigate('/login')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    verifyUser()\r\n  }, [])\r\n\r\n\r\n  \r\n  const {CheckIfNoteUpdated, setCheckIfNoteUpdated} = useContext(userNotesContext)\r\n\r\n  useEffect(()=>{\r\n    console.log('inside USEEFFECT OF DASHBOARD', CheckIfNoteUpdated);\r\n    if(CheckIfNoteUpdated) setCheckIfNoteUpdated(false)\r\n  },[CheckIfNoteUpdated])\r\n\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }))\r\n\r\n  return (\r\n    <userNotesContext.Provider value={{setCheckIfNoteUpdated}}>\r\n      <div className='notes-wrapper'>\r\n        <Navbar />\r\n        <Outlet />\r\n        <div>New Note</div>\r\n        <div className='notes-container'>\r\n          {Notes?.map((note) => {\r\n            return (\r\n              // <Link\r\n              //   to={`/api/dashboard/${note._id}`}\r\n              //   key={note._id}\r\n              //   state={{ background: location }}\r\n              //   style={null}\r\n              // >\r\n                <Note key={note._id} note={note}/>\r\n              //  </Link>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </userNotesContext.Provider>\r\n  )\r\n\r\n  // return (\r\n  //   <>\r\n  //     <Navbar />\r\n\r\n  //     <div className='notes-wrapper'>\r\n  //       <Box sx={{ flexGrow: 1 }}>\r\n  //         <Grid\r\n  //           container\r\n  //           spacing={{ xs: 2, md: 3 }}\r\n  //           columns={{ xs: 4, sm: 8, md: 12 }}\r\n  //         >\r\n  //           {Notes?.map((note) => {\r\n  //             return (\r\n  //               <Grid item xs={2} sm={4} md={4} key={note._id}>\r\n  //                 <Item>\r\n  //                  <Note note={note}/>\r\n  //                 </Item>\r\n  //               </Grid>\r\n  //             )\r\n  //           })}\r\n  //         </Grid>\r\n  //       </Box>\r\n  //       <hr />\r\n  //       aqdr\r\n  //       {/* <div style={{height:'150px' ,width:'150px' ,borderRadius:\"10px\", display:'flex', justifyContent:'center', border:'10px solid red'}}> */}\r\n  //       {/* </div> */}\r\n  //     </div>\r\n  //     {/* <Outlet /> */}\r\n  //   </>\r\n  // )\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}