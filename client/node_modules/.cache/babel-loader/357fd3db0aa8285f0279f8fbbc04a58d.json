{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport './Dashboard.css';\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useNavigate, Outlet, Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { useTheme } from '@mui/material/styles';\nimport Navbar from './Navbar';\nimport Note from './Note';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Modal from './Modal';\nimport userNotesContext from '../../Context/userNotesContext';\nimport AddNote from './AddNote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const theme = useTheme();\n  let location = useLocation();\n  const navigate = useNavigate();\n  const [Notes, setNotes] = useState();\n  const [CheckIfNewNoteAdded, setCheckIfNewNoteAdded] = useState(false);\n  const {\n    CheckIfNoteUpdated,\n    setCheckIfNoteUpdated\n  } = useContext(userNotesContext);\n\n  const verifyUser = async () => {\n    try {\n      const response = await axios.get('/api/dashboard/', {\n        withCredentials: true\n      });\n\n      if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n        var _response$data;\n\n        setNotes(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.notes);\n      }\n    } catch (err) {\n      console.log('error from dashboard js file', err);\n      navigate('/login');\n    }\n  };\n\n  useEffect(() => {\n    verifyUser();\n  }, []);\n  useEffect(() => {\n    console.log('inside USEEFFECT OF DASHBOARD', CheckIfNoteUpdated);\n\n    if (CheckIfNoteUpdated || CheckIfNewNoteAdded) {\n      verifyUser();\n      setCheckIfNoteUpdated(false);\n      setCheckIfNewNoteAdded(false);\n    }\n  }, [CheckIfNoteUpdated, CheckIfNewNoteAdded]);\n  const Item = styled(Paper)(_ref => {\n    let {\n      theme\n    } = _ref;\n    return {\n      backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n      ...theme.typography.body2,\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddNote, {\n      setCheckIfNewNoteAdded: setCheckIfNewNoteAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-container\",\n      children: Notes === null || Notes === void 0 ? void 0 : Notes.map(note => {\n        return /*#__PURE__*/_jsxDEV(Note, {\n          note: note\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this); // return (\n  //   <>\n  //     <Navbar />\n  //     <div className='notes-wrapper'>\n  //       <Box sx={{ flexGrow: 1 }}>\n  //         <Grid\n  //           container\n  //           spacing={{ xs: 2, md: 3 }}\n  //           columns={{ xs: 4, sm: 8, md: 12 }}\n  //         >\n  //           {Notes?.map((note) => {\n  //             return (\n  //               <Grid item xs={2} sm={4} md={4} key={note._id}>\n  //                 <Item>\n  //                  <Note note={note}/>\n  //                 </Item>\n  //               </Grid>\n  //             )\n  //           })}\n  //         </Grid>\n  //       </Box>\n  //       <hr />\n  //       aqdr\n  //       {/* <div style={{height:'150px' ,width:'150px' ,borderRadius:\"10px\", display:'flex', justifyContent:'center', border:'10px solid red'}}> */}\n  //       {/* </div> */}\n  //     </div>\n  //     {/* <Outlet /> */}\n  //   </>\n  // )\n}\n\n_s(Dashboard, \"QVYASiEVTgrIZ7ZCEmIrXeY8rlo=\", false, function () {\n  return [useTheme, useLocation, useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Dashboard.js"],"names":["React","createContext","useContext","useEffect","useState","useNavigate","Outlet","Link","useLocation","axios","useTheme","Navbar","Note","experimentalStyled","styled","Box","Paper","Grid","Modal","userNotesContext","AddNote","Dashboard","theme","location","navigate","Notes","setNotes","CheckIfNewNoteAdded","setCheckIfNewNoteAdded","CheckIfNoteUpdated","setCheckIfNoteUpdated","verifyUser","response","get","withCredentials","status","data","notes","err","console","log","Item","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","map","note","_id"],"mappings":"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","sourcesContent":["import './Dashboard.css'\r\nimport React, { createContext, useContext, useEffect, useState } from 'react'\r\nimport { useNavigate, Outlet, Link, useLocation } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport Navbar from './Navbar'\r\nimport Note from './Note'\r\nimport { experimentalStyled as styled } from '@mui/material/styles'\r\nimport Box from '@mui/material/Box'\r\nimport Paper from '@mui/material/Paper'\r\nimport Grid from '@mui/material/Grid'\r\nimport Modal from './Modal'\r\nimport userNotesContext from '../../Context/userNotesContext'\r\nimport AddNote from './AddNote'\r\nfunction Dashboard() {\r\n  const theme = useTheme()\r\n  let location = useLocation()\r\n  const navigate = useNavigate()\r\n  const [Notes, setNotes] = useState()\r\n  const [CheckIfNewNoteAdded, setCheckIfNewNoteAdded] = useState(false)\r\n  const { CheckIfNoteUpdated, setCheckIfNoteUpdated } =\r\n    useContext(userNotesContext)\r\n  const verifyUser = async () => {\r\n    try {\r\n      const response = await axios.get('/api/dashboard/', {\r\n        withCredentials: true,\r\n      })\r\n      if (response?.status === 200) {\r\n        setNotes(response?.data?.notes)\r\n      }\r\n    } catch (err) {\r\n      console.log('error from dashboard js file', err)\r\n      navigate('/login')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    verifyUser()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log('inside USEEFFECT OF DASHBOARD', CheckIfNoteUpdated)\r\n    if (CheckIfNoteUpdated || CheckIfNewNoteAdded) {\r\n      verifyUser()\r\n      setCheckIfNoteUpdated(false)\r\n      setCheckIfNewNoteAdded(false)\r\n    }\r\n  }, [CheckIfNoteUpdated, CheckIfNewNoteAdded])\r\n\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }))\r\n\r\n  return (\r\n    <div className='notes-wrapper'>\r\n      <Navbar />\r\n      <AddNote setCheckIfNewNoteAdded={setCheckIfNewNoteAdded} />\r\n      {/* <Outlet /> */}\r\n      <div className='notes-container'>\r\n        {Notes?.map((note) => {\r\n          return <Note key={note._id} note={note} />\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  // return (\r\n  //   <>\r\n  //     <Navbar />\r\n\r\n  //     <div className='notes-wrapper'>\r\n  //       <Box sx={{ flexGrow: 1 }}>\r\n  //         <Grid\r\n  //           container\r\n  //           spacing={{ xs: 2, md: 3 }}\r\n  //           columns={{ xs: 4, sm: 8, md: 12 }}\r\n  //         >\r\n  //           {Notes?.map((note) => {\r\n  //             return (\r\n  //               <Grid item xs={2} sm={4} md={4} key={note._id}>\r\n  //                 <Item>\r\n  //                  <Note note={note}/>\r\n  //                 </Item>\r\n  //               </Grid>\r\n  //             )\r\n  //           })}\r\n  //         </Grid>\r\n  //       </Box>\r\n  //       <hr />\r\n  //       aqdr\r\n  //       {/* <div style={{height:'150px' ,width:'150px' ,borderRadius:\"10px\", display:'flex', justifyContent:'center', border:'10px solid red'}}> */}\r\n  //       {/* </div> */}\r\n  //     </div>\r\n  //     {/* <Outlet /> */}\r\n  //   </>\r\n  // )\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}