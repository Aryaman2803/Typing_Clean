{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\Note.js\",\n    _s = $RefreshSig$();\n\nimport './Dashboard.css';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './Dashboard.css';\nimport { convertFromRaw, EditorState } from 'draft-js';\nimport ModalEditor from '../../Hooks/ModalEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Note = _ref => {\n  _s();\n\n  let {\n    note\n  } = _ref;\n  const location = useLocation();\n  const [editorStateTitle, setEditorStateTitle] = useState(calcState(note.title));\n  const [editorStateBody, setEditorStateBody] = useState(calcState(note.body));\n  useEffect(() => {\n    setEditorStateTitle(calcState(note.title));\n    setEditorStateBody(calcState(note.body));\n  }, [note]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"single-note-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/api/dashboard/${note._id}`,\n      state: {\n        background: location\n      },\n      className: \"note-link\",\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"single-note\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-title\",\n          children: /*#__PURE__*/_jsxDEV(ModalEditor, {\n            editorState: editorStateTitle,\n            onChange: setEditorStateTitle,\n            isReadOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-body\",\n          children: [/*#__PURE__*/_jsxDEV(ModalEditor, {\n            editorState: editorStateBody,\n            onChange: setEditorStateBody,\n            isReadOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: note.updatedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, note._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 6\n  }, this) // <section className='single-note'>\n  //   <Link\n  //     key={note._id}\n  //     to={`/api/dashboard/${note._id}`}\n  //     state={{ background: location }}\n  //     className='note-link'\n  //   >\n  //     <div className='note-title'>\n  //       <ModalEditor\n  //         editorState={editorStateTitle}\n  //         onChange={setEditorStateTitle}\n  //         isReadOnly={true}\n  //       />\n  //     </div>\n  //     <div className='note-body'>\n  //       <ModalEditor\n  //         editorState={editorStateBody}\n  //         onChange={setEditorStateBody}\n  //         isReadOnly={true}\n  //       />\n  //     </div>\n  //   </Link>\n  // </section>\n  ;\n};\n\n_s(Note, \"ffn/Ss3vMk/ceTtn/xAvKbjCFCU=\", false, function () {\n  return [useLocation];\n});\n\n_c = Note;\n\nconst calcState = value => {\n  return value ? EditorState.createWithContent(convertFromRaw(JSON.parse(value))) : EditorState.createEmpty();\n};\n\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Note.js"],"names":["React","useEffect","useState","Link","useLocation","convertFromRaw","EditorState","ModalEditor","Note","note","location","editorStateTitle","setEditorStateTitle","calcState","title","editorStateBody","setEditorStateBody","body","_id","background","updatedAt","value","createWithContent","JSON","parse","createEmpty"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAO,iBAAP;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,UAA5C;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAEA,MAAMC,IAAI,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACzB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CACtDW,SAAS,CAACJ,IAAI,CAACK,KAAN,CAD6C,CAAxD;AAGA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAACW,SAAS,CAACJ,IAAI,CAACQ,IAAN,CAAV,CAAtD;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,mBAAmB,CAACC,SAAS,CAACJ,IAAI,CAACK,KAAN,CAAV,CAAnB;AACAE,IAAAA,kBAAkB,CAACH,SAAS,CAACJ,IAAI,CAACQ,IAAN,CAAV,CAAlB;AACD,GAHQ,EAGN,CAACR,IAAD,CAHM,CAAT;AAKA,sBACG;AAAS,IAAA,SAAS,EAAC,qBAAnB;AAAA,2BACC,QAAC,IAAD;AAEE,MAAA,EAAE,EAAG,kBAAiBA,IAAI,CAACS,GAAI,EAFjC;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAET;AAAd,OAHT;AAIE,MAAA,SAAS,EAAC,WAJZ;AAAA,6BAME;AAAS,QAAA,SAAS,EAAC,aAAnB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,WAAW,EAAEC,gBADf;AAEE,YAAA,QAAQ,EAAEC,mBAFZ;AAGE,YAAA,UAAU,EAAE;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE,QAAC,WAAD;AACE,YAAA,WAAW,EAAEG,eADf;AAEE,YAAA,QAAQ,EAAEC,kBAFZ;AAGE,YAAA,UAAU,EAAE;AAHd;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAA,sBAAMP,IAAI,CAACW;AAAX;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF,OACOX,IAAI,CAACS,GADZ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADH,CA2BE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDF;AAmDD,CAhED;;GAAMV,I;UACaJ,W;;;KADbI,I;;AAkEN,MAAMK,SAAS,GAAIQ,KAAD,IAAW;AAC3B,SAAOA,KAAK,GACRf,WAAW,CAACgB,iBAAZ,CAA8BjB,cAAc,CAACkB,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAD,CAA5C,CADQ,GAERf,WAAW,CAACmB,WAAZ,EAFJ;AAGD,CAJD;;AAKA,eAAejB,IAAf","sourcesContent":["import './Dashboard.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport './Dashboard.css'\r\nimport { convertFromRaw, EditorState } from 'draft-js'\r\nimport ModalEditor from '../../Hooks/ModalEditor'\r\n\r\nconst Note = ({ note }) => {\r\n  const location = useLocation()\r\n\r\n  const [editorStateTitle, setEditorStateTitle] = useState(\r\n    calcState(note.title)\r\n  )\r\n  const [editorStateBody, setEditorStateBody] = useState(calcState(note.body))\r\n\r\n  useEffect(() => {\r\n    setEditorStateTitle(calcState(note.title))\r\n    setEditorStateBody(calcState(note.body))\r\n  }, [note])\r\n\r\n  return (\r\n     <section className='single-note-wrapper'>\r\n      <Link\r\n        key={note._id}\r\n        to={`/api/dashboard/${note._id}`}\r\n        state={{ background: location }}\r\n        className='note-link'\r\n      >\r\n        <article className='single-note'>\r\n          <div className='note-title'>\r\n            <ModalEditor\r\n              editorState={editorStateTitle}\r\n              onChange={setEditorStateTitle}\r\n              isReadOnly={true}\r\n            />\r\n          </div>\r\n          <div className='note-body'>\r\n            <ModalEditor\r\n              editorState={editorStateBody}\r\n              onChange={setEditorStateBody}\r\n              isReadOnly={true}\r\n            />\r\n            <div>{note.updatedAt}</div>\r\n          </div>\r\n        </article>\r\n      </Link>\r\n    </section>\r\n    // <section className='single-note'>\r\n    //   <Link\r\n    //     key={note._id}\r\n    //     to={`/api/dashboard/${note._id}`}\r\n    //     state={{ background: location }}\r\n    //     className='note-link'\r\n    //   >\r\n    //     <div className='note-title'>\r\n    //       <ModalEditor\r\n    //         editorState={editorStateTitle}\r\n    //         onChange={setEditorStateTitle}\r\n    //         isReadOnly={true}\r\n    //       />\r\n    //     </div>\r\n    //     <div className='note-body'>\r\n    //       <ModalEditor\r\n    //         editorState={editorStateBody}\r\n    //         onChange={setEditorStateBody}\r\n    //         isReadOnly={true}\r\n    //       />\r\n    //     </div>\r\n    //   </Link>\r\n    // </section>\r\n  )\r\n}\r\n\r\nconst calcState = (value) => {\r\n  return value\r\n    ? EditorState.createWithContent(convertFromRaw(JSON.parse(value)))\r\n    : EditorState.createEmpty()\r\n}\r\nexport default Note\r\n"]},"metadata":{},"sourceType":"module"}