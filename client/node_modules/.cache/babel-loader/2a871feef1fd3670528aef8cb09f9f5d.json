{"ast":null,"code":"import React from'react';import{Editor,RichUtils}from'draft-js';import'draft-js/dist/Draft.css';import Toolbar from'./Toolbar';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditorComp=function EditorComp(_ref){var editorState=_ref.editorState,setEditorState=_ref.setEditorState,placeholderText=_ref.placeholderText,setCheckIfNoteEdited=_ref.setCheckIfNoteEdited,showToolbar=_ref.showToolbar,submitNote=_ref.submitNote,clearNote=_ref.clearNote,DisplayNote=_ref.DisplayNote;var handleKeyCommand=function handleKeyCommand(command,editorState){var newState=RichUtils.handleKeyCommand(editorState,command);if(newState){setEditorState(newState);setCheckIfNoteEdited(true);}};var onChange=function onChange(newState){var currentContentState=editorState.getCurrentContent();var newContentState=newState.getCurrentContent();setEditorState(newState);if(currentContentState!==newContentState)setCheckIfNoteEdited(true);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Editor,{editorState:editorState,value:editorState,onChange:onChange,placeholder:placeholderText,handleKeyCommand:handleKeyCommand}),showToolbar&&DisplayNote&&/*#__PURE__*/_jsx(Toolbar,{editorState:editorState,setEditorState:setEditorState,submitNote:submitNote,clearNote:clearNote,switchFor:'addNote'})]});};export default EditorComp;","map":{"version":3,"sources":["C:/WEBDEV/Typing-Clone/Typing/client/src/Hooks/DraftEditor.js"],"names":["React","Editor","RichUtils","Toolbar","EditorComp","editorState","setEditorState","placeholderText","setCheckIfNoteEdited","showToolbar","submitNote","clearNote","DisplayNote","handleKeyCommand","command","newState","onChange","currentContentState","getCurrentContent","newContentState"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,SAAjB,KAAkC,UAAlC,CACA,MAAO,yBAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,6IAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MASb,IARJC,CAAAA,WAQI,MARJA,WAQI,CAPJC,cAOI,MAPJA,cAOI,CANJC,eAMI,MANJA,eAMI,CALJC,oBAKI,MALJA,oBAKI,CAJJC,WAII,MAJJA,WAII,CAHJC,UAGI,MAHJA,UAGI,CAFJC,SAEI,MAFJA,SAEI,CADJC,WACI,MADJA,WACI,CACJ,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,OAAD,CAAUT,WAAV,CAA0B,CACjD,GAAMU,CAAAA,QAAQ,CAAGb,SAAS,CAACW,gBAAV,CAA2BR,WAA3B,CAAwCS,OAAxC,CAAjB,CACA,GAAIC,QAAJ,CAAc,CACZT,cAAc,CAACS,QAAD,CAAd,CACAP,oBAAoB,CAAC,IAAD,CAApB,CACD,CACF,CAND,CAOA,GAAMQ,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACD,QAAD,CAAc,CAC7B,GAAME,CAAAA,mBAAmB,CAAGZ,WAAW,CAACa,iBAAZ,EAA5B,CACA,GAAMC,CAAAA,eAAe,CAAGJ,QAAQ,CAACG,iBAAT,EAAxB,CACAZ,cAAc,CAACS,QAAD,CAAd,CACA,GAAIE,mBAAmB,GAAKE,eAA5B,CAA6CX,oBAAoB,CAAC,IAAD,CAApB,CAC9C,CALD,CAOA,mBACE,wCACE,KAAC,MAAD,EACE,WAAW,CAAEH,WADf,CAEE,KAAK,CAAEA,WAFT,CAGE,QAAQ,CAAEW,QAHZ,CAIE,WAAW,CAAET,eAJf,CAKE,gBAAgB,CAAEM,gBALpB,EADF,CASGJ,WAAW,EAAIG,WAAf,eACC,KAAC,OAAD,EACE,WAAW,CAAEP,WADf,CAEE,cAAc,CAAEC,cAFlB,CAGE,UAAU,CAAEI,UAHd,CAIE,SAAS,CAAEC,SAJb,CAKE,SAAS,CAAE,SALb,EAVJ,GADF,CAqBD,CA7CD,CA+CA,cAAeP,CAAAA,UAAf","sourcesContent":["import React from 'react'\r\nimport { Editor, RichUtils } from 'draft-js'\r\nimport 'draft-js/dist/Draft.css'\r\nimport Toolbar from './Toolbar'\r\n\r\nconst EditorComp = ({\r\n  editorState,\r\n  setEditorState,\r\n  placeholderText,\r\n  setCheckIfNoteEdited,\r\n  showToolbar,\r\n  submitNote,\r\n  clearNote,\r\n  DisplayNote,\r\n}) => {\r\n  const handleKeyCommand = (command, editorState) => {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command)\r\n    if (newState) {\r\n      setEditorState(newState)\r\n      setCheckIfNoteEdited(true)\r\n    }\r\n  }\r\n  const onChange = (newState) => {\r\n    const currentContentState = editorState.getCurrentContent()\r\n    const newContentState = newState.getCurrentContent()\r\n    setEditorState(newState)\r\n    if (currentContentState !== newContentState) setCheckIfNoteEdited(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Editor\r\n        editorState={editorState}\r\n        value={editorState}\r\n        onChange={onChange}\r\n        placeholder={placeholderText}\r\n        handleKeyCommand={handleKeyCommand}\r\n      />\r\n      {/* {showToolbar && editorState.getCurrentContent().hasText() && ( */}\r\n      {showToolbar && DisplayNote && (\r\n        <Toolbar\r\n          editorState={editorState}\r\n          setEditorState={setEditorState}\r\n          submitNote={submitNote}\r\n          clearNote={clearNote}\r\n          switchFor={'addNote'}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditorComp\r\n"]},"metadata":{},"sourceType":"module"}