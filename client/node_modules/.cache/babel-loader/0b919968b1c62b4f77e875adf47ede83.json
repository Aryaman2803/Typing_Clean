{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const navigate = useNavigate();\n  const [Notes, setNotes] = useState();\n\n  const verifyUser = async () => {\n    try {\n      const response = await axios.get('/api/dashboard/notes', {\n        withCredentials: true\n      });\n\n      if (response.status === 200) {\n        setNotes(response.data);\n        console.log('printing resonse', response.data);\n      } else {\n        navigate('/login');\n        console.log('no response', response);\n      }\n    } catch (err) {\n      console.log('error from dashboard js file', err);\n    }\n  };\n\n  useEffect(() => {\n    verifyUser();\n  }, []);\n\n  const populateNotes = async token => {// await axios\n    //   .get('http://localhost:3000/api/dashboard/notes', {\n    //     headers: {\n    //       'x-access-token': localStorage.getItem('token'),\n    //     },\n    //   })\n    //   .then((response) => {\n    //     setNotes(response.data.notes)\n    //   })\n  };\n\n  useEffect(() => {// const token = localStorage.getItem('token')\n    // if (token) {\n    //   const user = jwt_decode(token)\n    //   if (user) populateNotes(token)\n    //   else {\n    //     localStorage.removeItem('token')\n    //     navigate('/login')\n    //   }\n    // }\n    // // if (!token) return navigate('/login')\n    // if (token) {\n    //   const user = jwt_decode(token)\n    //   if (user) {\n    //     populateNotes(token)\n    //   } else {\n    //     localStorage.removeItem('token')\n    //     navigate('/login')\n    //   }\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"iIUNyRbRK8EqGhWCVZLd3Mesqyg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","useRef","jwt_decode","useNavigate","axios","Dashboard","navigate","Notes","setNotes","verifyUser","response","get","withCredentials","status","data","console","log","err","populateNotes","token"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;;AAEA,QAAMS,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,sBAAV,EAAkC;AACvDC,QAAAA,eAAe,EAAE;AADsC,OAAlC,CAAvB;;AAGA,UAAGF,QAAQ,CAACG,MAAT,KAAoB,GAAvB,EAA4B;AAC1BL,QAAAA,QAAQ,CAACE,QAAQ,CAACI,IAAV,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCN,QAAQ,CAACI,IAAzC;AACD,OAHD,MAGK;AACHR,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BN,QAA1B;AAED;AAGF,KAdD,CAcE,OAAOO,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2CC,GAA3C;AACD;AACF,GAlBD;;AAoBAlB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMS,aAAa,GAAG,MAAOC,KAAP,IAAiB,CACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAVD;;AAWApB,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GApBQ,EAoBN,EApBM,CAAT;AAqBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAzEQM,S;UACUF,W;;;KADVE,S;AA2ET,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport jwt_decode from 'jwt-decode'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\nfunction Dashboard() {\r\n  const navigate = useNavigate()\r\n  const [Notes, setNotes] = useState()\r\n\r\n  const verifyUser = async () => {\r\n    try {\r\n      const response = await axios.get('/api/dashboard/notes', {\r\n        withCredentials: true,\r\n      })\r\n      if(response.status === 200) {\r\n        setNotes(response.data)\r\n        console.log('printing resonse', response.data);\r\n      }else{\r\n        navigate('/login')\r\n        console.log('no response',response);\r\n\r\n      }\r\n      \r\n\r\n    } catch (err) {\r\n      console.log('error from dashboard js file',err)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    verifyUser()\r\n  }, [])\r\n  const populateNotes = async (token) => {\r\n    // await axios\r\n    //   .get('http://localhost:3000/api/dashboard/notes', {\r\n    //     headers: {\r\n    //       'x-access-token': localStorage.getItem('token'),\r\n    //     },\r\n    //   })\r\n    //   .then((response) => {\r\n    //     setNotes(response.data.notes)\r\n    //   })\r\n  }\r\n  useEffect(() => {\r\n    // const token = localStorage.getItem('token')\r\n    // if (token) {\r\n    //   const user = jwt_decode(token)\r\n    //   if (user) populateNotes(token)\r\n    //   else {\r\n    //     localStorage.removeItem('token')\r\n    //     navigate('/login')\r\n    //   }\r\n    // }\r\n    // // if (!token) return navigate('/login')\r\n    // if (token) {\r\n    //   const user = jwt_decode(token)\r\n    //   if (user) {\r\n    //     populateNotes(token)\r\n    //   } else {\r\n    //     localStorage.removeItem('token')\r\n    //     navigate('/login')\r\n    //   }\r\n    // }\r\n  }, [])\r\n  return (\r\n    <div>\r\n      Dashboard\r\n      {/* {Notes &&\r\n        Notes.map((note) => {\r\n          return (\r\n            <div key={note._id}>\r\n              Title: {note.title}\r\n              Body: {note.body}\r\n            </div>\r\n          )\r\n        })} */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}