{"ast":null,"code":"import _asyncToGenerator from\"C:/WEBDEV/Typing-Clone/Typing/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/WEBDEV/Typing-Clone/Typing/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\WEBDEV\\\\Typing-Clone\\\\Typing\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import'./Dashboard.css';import React,{useContext,useEffect,useState}from'react';import{useNavigate,Outlet}from'react-router-dom';import axios from'axios';import Navbar from'./Navbar';import Note from'./Note';import userNotesContext from'../../Context/userNotesContext';import AddNote from'./AddNote';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Dashboard(){var _Notes$filter;var navigate=useNavigate();var _useState=useState(),_useState2=_slicedToArray(_useState,2),Notes=_useState2[0],setNotes=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),CheckIfNewNoteAdded=_useState4[0],setCheckIfNewNoteAdded=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),SearchNote=_useState6[0],setSearchNote=_useState6[1];var _useContext=useContext(userNotesContext),CheckIfNoteUpdated=_useContext.CheckIfNoteUpdated,setCheckIfNoteUpdated=_useContext.setCheckIfNoteUpdated;var verifyUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,_response$data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('/api/dashboard/',{withCredentials:true});case 3:response=_context.sent;if((response===null||response===void 0?void 0:response.status)===200){setNotes(response===null||response===void 0?void 0:(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.notes);}_context.next=11;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log('error from dashboard js file',_context.t0);navigate('/login');case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function verifyUser(){return _ref.apply(this,arguments);};}();useEffect(function(){verifyUser();},[]);useEffect(function(){if(CheckIfNewNoteAdded||CheckIfNoteUpdated){verifyUser();setCheckIfNoteUpdated(false);setCheckIfNewNoteAdded(false);}},[CheckIfNewNoteAdded,CheckIfNoteUpdated]);return/*#__PURE__*/_jsxs(\"div\",{className:\"notes-wrapper\",children:[/*#__PURE__*/_jsx(Navbar,{setSearchNote:setSearchNote}),!SearchNote&&/*#__PURE__*/_jsx(AddNote,{setCheckIfNewNoteAdded:setCheckIfNewNoteAdded}),/*#__PURE__*/_jsx(Outlet,{}),/*#__PURE__*/_jsx(\"div\",{className:\"notes-container\",children:Notes===null||Notes===void 0?void 0:(_Notes$filter=Notes.filter(function(note){return note.title.toLowerCase().includes(SearchNote)||note.body.toLowerCase().includes(SearchNote);}))===null||_Notes$filter===void 0?void 0:_Notes$filter.map(function(note){return/*#__PURE__*/_jsx(Note,{note:note,setCheckIfNoteUpdated:setCheckIfNoteUpdated,CheckIfNoteUpdated:CheckIfNoteUpdated},note._id);})})]});}export default Dashboard;","map":{"version":3,"sources":["C:/WEBDEV/Typing-Clone/Typing/client/src/Components/Dashboard/Dashboard.js"],"names":["React","useContext","useEffect","useState","useNavigate","Outlet","axios","Navbar","Note","userNotesContext","AddNote","Dashboard","navigate","Notes","setNotes","CheckIfNewNoteAdded","setCheckIfNewNoteAdded","SearchNote","setSearchNote","CheckIfNoteUpdated","setCheckIfNoteUpdated","verifyUser","get","withCredentials","response","status","data","notes","console","log","filter","note","title","toLowerCase","includes","body","map","_id"],"mappings":"0XAAA,MAAO,iBAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,CAAuCC,QAAvC,KAAuD,OAAvD,CACA,OAASC,WAAT,CAAsBC,MAAtB,KAAoC,kBAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,gCAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,wFAEA,QAASC,CAAAA,SAAT,EAAqB,mBACnB,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CACA,cAA0BD,QAAQ,EAAlC,wCAAOU,KAAP,eAAcC,QAAd,eACA,eAAsDX,QAAQ,CAAC,KAAD,CAA9D,yCAAOY,mBAAP,eAA4BC,sBAA5B,eACA,eAAoCb,QAAQ,CAAC,EAAD,CAA5C,yCAAOc,UAAP,eAAmBC,aAAnB,eAEA,gBACEjB,UAAU,CAACQ,gBAAD,CADZ,CAAQU,kBAAR,aAAQA,kBAAR,CAA4BC,qBAA5B,aAA4BA,qBAA5B,CAEA,GAAMC,CAAAA,UAAU,0FAAG,qMAEQf,CAAAA,KAAK,CAACgB,GAAN,CAAU,iBAAV,CAA6B,CAClDC,eAAe,CAAE,IADiC,CAA7B,CAFR,QAETC,QAFS,eAKf,GAAI,CAAAA,QAAQ,OAAR,EAAAA,QAAQ,SAAR,QAAAA,QAAQ,CAAEC,MAAV,IAAqB,GAAzB,CAA8B,CAC5BX,QAAQ,CAACU,QAAD,SAACA,QAAD,iCAACA,QAAQ,CAAEE,IAAX,yCAAC,eAAgBC,KAAjB,CAAR,CACD,CAPc,+EASfC,OAAO,CAACC,GAAR,CAAY,8BAAZ,cACAjB,QAAQ,CAAC,QAAD,CAAR,CAVe,oEAAH,kBAAVS,CAAAA,UAAU,0CAAhB,CAcAnB,SAAS,CAAC,UAAM,CACdmB,UAAU,GACX,CAFQ,CAEN,EAFM,CAAT,CAIAnB,SAAS,CAAC,UAAM,CACd,GAAIa,mBAAmB,EAAII,kBAA3B,CAA+C,CAC7CE,UAAU,GACVD,qBAAqB,CAAC,KAAD,CAArB,CAEAJ,sBAAsB,CAAC,KAAD,CAAtB,CACD,CACF,CAPQ,CAON,CAACD,mBAAD,CAAsBI,kBAAtB,CAPM,CAAT,CASA,mBACE,aAAK,SAAS,CAAC,eAAf,wBACE,KAAC,MAAD,EAAQ,aAAa,CAAED,aAAvB,EADF,CAEG,CAACD,UAAD,eACC,KAAC,OAAD,EAAS,sBAAsB,CAAED,sBAAjC,EAHJ,cAKE,KAAC,MAAD,IALF,cAME,YAAK,SAAS,CAAC,iBAAf,UACGH,KADH,SACGA,KADH,gCACGA,KAAK,CAAEiB,MAAP,CACC,SAACC,IAAD,QACEA,CAAAA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCjB,UAAlC,GACAc,IAAI,CAACI,IAAL,CAAUF,WAAV,GAAwBC,QAAxB,CAAiCjB,UAAjC,CAFF,EADD,CADH,wCACG,cAIEmB,GAJF,CAIM,SAACL,IAAD,CAAU,CACf,mBACE,KAAC,IAAD,EAEE,IAAI,CAAEA,IAFR,CAGE,qBAAqB,CAAEX,qBAHzB,CAIE,kBAAkB,CAAED,kBAJtB,EACOY,IAAI,CAACM,GADZ,CADF,CAQD,CAbA,CADH,EANF,GADF,CAyBD,CAED,cAAe1B,CAAAA,SAAf","sourcesContent":["import './Dashboard.css'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate, Outlet } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Navbar from './Navbar'\r\nimport Note from './Note'\r\nimport userNotesContext from '../../Context/userNotesContext'\r\nimport AddNote from './AddNote'\r\n\r\nfunction Dashboard() {\r\n  const navigate = useNavigate()\r\n  const [Notes, setNotes] = useState()\r\n  const [CheckIfNewNoteAdded, setCheckIfNewNoteAdded] = useState(false)\r\n  const [SearchNote, setSearchNote] = useState('')\r\n\r\n  const { CheckIfNoteUpdated, setCheckIfNoteUpdated } =\r\n    useContext(userNotesContext)\r\n  const verifyUser = async () => {\r\n    try {\r\n      const response = await axios.get('/api/dashboard/', {\r\n        withCredentials: true,\r\n      })\r\n      if (response?.status === 200) {\r\n        setNotes(response?.data?.notes)\r\n      }\r\n    } catch (err) {\r\n      console.log('error from dashboard js file', err)\r\n      navigate('/login')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    verifyUser()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (CheckIfNewNoteAdded || CheckIfNoteUpdated) {\r\n      verifyUser()\r\n      setCheckIfNoteUpdated(false)\r\n      \r\n      setCheckIfNewNoteAdded(false)\r\n    }\r\n  }, [CheckIfNewNoteAdded, CheckIfNoteUpdated])\r\n\r\n  return (\r\n    <div className='notes-wrapper'>\r\n      <Navbar setSearchNote={setSearchNote} />\r\n      {!SearchNote && (\r\n        <AddNote setCheckIfNewNoteAdded={setCheckIfNewNoteAdded} />\r\n      )}\r\n      <Outlet />\r\n      <div className='notes-container'>\r\n        {Notes?.filter(\r\n          (note) =>\r\n            note.title.toLowerCase().includes(SearchNote) ||\r\n            note.body.toLowerCase().includes(SearchNote)\r\n        )?.map((note) => {\r\n          return (\r\n            <Note\r\n              key={note._id}\r\n              note={note}\r\n              setCheckIfNoteUpdated={setCheckIfNoteUpdated}\r\n              CheckIfNoteUpdated={CheckIfNoteUpdated}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}