{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\AddNote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { convertToRaw, EditorState } from 'draft-js';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport EditorComp from '../../Hooks/DraftEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddNote(_ref) {\n  _s();\n\n  let {\n    setCheckIfNewNoteAdded\n  } = _ref;\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\n  const [editorStateTitle, setEditorStateTitle] = useState(() => EditorState.createEmpty());\n  const [checkIfNoteEdited, setCheckIfNoteEdited] = useState(false); //   const handleKeyCommand = (command, editorState) => {\n  //     const newState = RichUtils.handleKeyCommand(editorState, command)\n  //     if (newState) {\n  //       setEditorState(newState)\n  //       setCheckIfNoteEdited(true)\n  //       return 'handled'\n  //     }\n  //     return 'not handled'\n  //   }\n\n  const submitNote = async () => {\n    if (checkIfNoteEdited && (editorStateTitle.getCurrentContent().hasText() || editorState.getCurrentContent().hasText())) {\n      await axios.post('/api/dashboard/notes', {\n        body: JSON.stringify(convertToRaw(editorState.getCurrentContent()))\n      });\n      setEditorState(EditorState.createEmpty());\n      setEditorStateTitle(EditorState.createEmpty());\n      setCheckIfNewNoteAdded(true);\n      setCheckIfNoteEdited(false);\n    } else console.log('eeee');\n  };\n\n  const clearNote = () => {\n    setEditorState(EditorState.createEmpty());\n    setEditorStateTitle(EditorState.createEmpty());\n    setCheckIfNoteEdited(false);\n  };\n\n  function expandContainer() {\n    console.log('expand');\n  } //   const onChange = (newState) => {\n  //     const currentContentState = editorState.getCurrentContent()\n  //     const newContentState = newState.getCurrentContent()\n  //     setEditorState(newState)\n  //     if (currentContentState !== newContentState) {\n  //       setCheckIfNoteEdited(true)\n  //       console.log('chaning')\n  //     } else {\n  //       console.log('not changing')\n  //     }\n  //   }\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"addNote-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addNote-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addNote-Title\",\n        onClick: expandContainer,\n        children: /*#__PURE__*/_jsxDEV(EditorComp, {\n          editorState: editorStateTitle,\n          setEditorState: setEditorStateTitle,\n          placeholderText: \"Title\",\n          setCheckIfNoteEdited: setCheckIfNoteEdited,\n          showToolbar: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addNote-Body\",\n        style: {\n          display: editorState.getCurrentContent().hasText() ? 'block' : 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(EditorComp, {\n          editorState: editorState,\n          setEditorState: setEditorState,\n          placeholderText: \"Start typing...\",\n          setCheckIfNoteEdited: setCheckIfNoteEdited,\n          showToolbar: true,\n          submitNote: submitNote,\n          clearNote: clearNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddNote, \"btXVPYVT0yMfddsSbLnEr5pBOQo=\");\n\n_c = AddNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNote\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/AddNote.js"],"names":["React","useState","convertToRaw","EditorState","axios","EditorComp","AddNote","setCheckIfNewNoteAdded","editorState","setEditorState","createEmpty","editorStateTitle","setEditorStateTitle","checkIfNoteEdited","setCheckIfNoteEdited","submitNote","getCurrentContent","hasText","post","body","JSON","stringify","console","log","clearNote","expandContainer","display"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { convertToRaw, EditorState } from 'draft-js'\r\nimport axios from 'axios'\r\nimport './Dashboard.css'\r\nimport EditorComp from '../../Hooks/DraftEditor'\r\n\r\nexport default function AddNote({ setCheckIfNewNoteAdded }) {\r\n  const [editorState, setEditorState] = useState(() =>\r\n    EditorState.createEmpty()\r\n  )\r\n  const [editorStateTitle, setEditorStateTitle] = useState(() =>\r\n    EditorState.createEmpty()\r\n  )\r\n\r\n  const [checkIfNoteEdited, setCheckIfNoteEdited] = useState(false)\r\n\r\n  //   const handleKeyCommand = (command, editorState) => {\r\n  //     const newState = RichUtils.handleKeyCommand(editorState, command)\r\n  //     if (newState) {\r\n  //       setEditorState(newState)\r\n  //       setCheckIfNoteEdited(true)\r\n  //       return 'handled'\r\n  //     }\r\n  //     return 'not handled'\r\n  //   }\r\n  const submitNote = async () => {\r\n    if (\r\n      checkIfNoteEdited &&\r\n      (editorStateTitle.getCurrentContent().hasText() ||\r\n        editorState.getCurrentContent().hasText())\r\n    ) {\r\n      await axios.post('/api/dashboard/notes', {\r\n        body: JSON.stringify(convertToRaw(editorState.getCurrentContent())),\r\n      })\r\n      setEditorState(EditorState.createEmpty())\r\n      setEditorStateTitle(EditorState.createEmpty())\r\n\r\n      setCheckIfNewNoteAdded(true)\r\n      setCheckIfNoteEdited(false)\r\n    } else console.log('eeee')\r\n  }\r\n  const clearNote = () => {\r\n    setEditorState(EditorState.createEmpty())\r\n    setEditorStateTitle(EditorState.createEmpty())\r\n    setCheckIfNoteEdited(false)\r\n  }\r\n\r\n  function expandContainer(){\r\n    console.log('expand');\r\n  } \r\n\r\n  //   const onChange = (newState) => {\r\n  //     const currentContentState = editorState.getCurrentContent()\r\n  //     const newContentState = newState.getCurrentContent()\r\n  //     setEditorState(newState)\r\n  //     if (currentContentState !== newContentState) {\r\n  //       setCheckIfNoteEdited(true)\r\n\r\n  //       console.log('chaning')\r\n  //     } else {\r\n  //       console.log('not changing')\r\n  //     }\r\n  //   }\r\n\r\n  return (\r\n    <section className='addNote-wrapper'>\r\n      <div className='addNote-container' >\r\n        {/* <Editor\r\n          editorState={editorState}\r\n          value={editorState}\r\n          onChange={onChange}\r\n          placeholder='Start typing...'\r\n          //   onChange={setEditorState}\r\n          handleKeyCommand={handleKeyCommand}\r\n          className='addNote-editor'\r\n        /> */}\r\n        <div className='addNote-Title' onClick={expandContainer}>\r\n          <EditorComp\r\n            editorState={editorStateTitle}\r\n            setEditorState={setEditorStateTitle}\r\n            placeholderText='Title'\r\n            setCheckIfNoteEdited={setCheckIfNoteEdited}\r\n            showToolbar={false}\r\n          />\r\n        </div>\r\n        <div className='addNote-Body' style={{display:editorState.getCurrentContent().hasText()? 'block' : 'none' }}> \r\n          <EditorComp\r\n            editorState={editorState}\r\n            setEditorState={setEditorState}\r\n            placeholderText='Start typing...'\r\n            setCheckIfNoteEdited={setCheckIfNoteEdited}\r\n            showToolbar={true}\r\n            submitNote={submitNote}\r\n            clearNote={clearNote}\r\n          />\r\n        </div>\r\n        {/* <Toolbar editorState={editorState} setEditorState={setEditorState} /> */}\r\n        {/* <button onClick={submitNote}> Save</button> */}\r\n        {/* <button onClick={clearNote}> Clear</button> */}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}