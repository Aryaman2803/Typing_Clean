{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport './Dashboard.css';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate, Outlet } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from './Navbar';\nimport Note from './Note';\nimport userNotesContext from '../../Context/userNotesContext';\nimport AddNote from './AddNote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const navigate = useNavigate();\n  const [Notes, setNotes] = useState();\n  const [CheckIfNewNoteAdded, setCheckIfNewNoteAdded] = useState(false);\n  const {\n    CheckIfNoteUpdated,\n    setCheckIfNoteUpdated\n  } = useContext(userNotesContext);\n\n  const verifyUser = async () => {\n    try {\n      const response = await axios.get('/api/dashboard/', {\n        withCredentials: true\n      });\n\n      if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n        var _response$data;\n\n        setNotes(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.notes);\n      }\n    } catch (err) {\n      console.log('error from dashboard js file', err);\n      navigate('/login');\n    }\n  };\n\n  useEffect(() => {\n    verifyUser();\n  }, []);\n  useEffect(() => {\n    if (CheckIfNewNoteAdded || CheckIfNoteUpdated) {\n      verifyUser();\n      setCheckIfNoteUpdated(false);\n      setCheckIfNewNoteAdded(false);\n    }\n  }, [CheckIfNewNoteAdded, CheckIfNoteUpdated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddNote, {\n      setCheckIfNewNoteAdded: setCheckIfNewNoteAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-container\",\n      children: Notes === null || Notes === void 0 ? void 0 : Notes.map(note => {\n        return /*#__PURE__*/_jsxDEV(Note, {\n          note: note,\n          setCheckIfNoteUpdated: setCheckIfNoteUpdated,\n          CheckIfNoteUpdated: CheckIfNoteUpdated\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"0pBosHpXTCAWl/0R6yI85T82W7M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Dashboard.js"],"names":["React","useContext","useEffect","useState","useNavigate","Outlet","axios","Navbar","Note","userNotesContext","AddNote","Dashboard","navigate","Notes","setNotes","CheckIfNewNoteAdded","setCheckIfNewNoteAdded","CheckIfNoteUpdated","setCheckIfNoteUpdated","verifyUser","response","get","withCredentials","status","data","notes","err","console","log","map","note","_id"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,kBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;AACA,QAAM,CAACY,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM;AAAEc,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MACJjB,UAAU,CAACQ,gBAAD,CADZ;;AAEA,QAAMU,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,iBAAV,EAA6B;AAClDC,QAAAA,eAAe,EAAE;AADiC,OAA7B,CAAvB;;AAGA,UAAI,CAAAF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEG,MAAV,MAAqB,GAAzB,EAA8B;AAAA;;AAC5BT,QAAAA,QAAQ,CAACM,QAAD,aAACA,QAAD,yCAACA,QAAQ,CAAEI,IAAX,mDAAC,eAAgBC,KAAjB,CAAR;AACD;AACF,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,GAA5C;AACAd,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;AACF,GAZD;;AAcAV,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,mBAAmB,IAAIE,kBAA3B,EAA+C;AAC7CE,MAAAA,UAAU;AACVD,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAF,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD;AACF,GANQ,EAMN,CAACD,mBAAD,EAAsBE,kBAAtB,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,sBAAsB,EAAED;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGH,KADH,aACGA,KADH,uBACGA,KAAK,CAAEgB,GAAP,CAAYC,IAAD,IAAU;AACpB,4BACE,QAAC,IAAD;AAEE,UAAA,IAAI,EAAEA,IAFR;AAGE,UAAA,qBAAqB,EAAEZ,qBAHzB;AAIE,UAAA,kBAAkB,EAAED;AAJtB,WACOa,IAAI,CAACC,GADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAnDQpB,S;UACUP,W;;;KADVO,S;AAqDT,eAAeA,SAAf","sourcesContent":["import './Dashboard.css'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate, Outlet } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Navbar from './Navbar'\r\nimport Note from './Note'\r\nimport userNotesContext from '../../Context/userNotesContext'\r\nimport AddNote from './AddNote'\r\n\r\nfunction Dashboard() {\r\n  const navigate = useNavigate()\r\n  const [Notes, setNotes] = useState()\r\n  const [CheckIfNewNoteAdded, setCheckIfNewNoteAdded] = useState(false)\r\n  const { CheckIfNoteUpdated, setCheckIfNoteUpdated } =\r\n    useContext(userNotesContext)\r\n  const verifyUser = async () => {\r\n    try {\r\n      const response = await axios.get('/api/dashboard/', {\r\n        withCredentials: true,\r\n      })\r\n      if (response?.status === 200) {\r\n        setNotes(response?.data?.notes)\r\n      }\r\n    } catch (err) {\r\n      console.log('error from dashboard js file', err)\r\n      navigate('/login')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    verifyUser()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (CheckIfNewNoteAdded || CheckIfNoteUpdated) {\r\n      verifyUser()\r\n      setCheckIfNoteUpdated(false)\r\n      setCheckIfNewNoteAdded(false)\r\n    }\r\n  }, [CheckIfNewNoteAdded, CheckIfNoteUpdated])\r\n\r\n  return (\r\n    <div className='notes-wrapper'>\r\n      <Navbar />\r\n      <AddNote setCheckIfNewNoteAdded={setCheckIfNewNoteAdded} />\r\n      <Outlet />\r\n      <div className='notes-container'>\r\n        {Notes?.map((note) => {\r\n          return (\r\n            <Note\r\n              key={note._id}\r\n              note={note}\r\n              setCheckIfNoteUpdated={setCheckIfNoteUpdated}\r\n              CheckIfNoteUpdated={CheckIfNoteUpdated}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}