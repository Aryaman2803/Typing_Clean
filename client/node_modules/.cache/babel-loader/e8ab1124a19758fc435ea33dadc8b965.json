{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Dialog } from '@reach/dialog';\nimport '@reach/dialog/styles.css';\nimport axios from 'axios';\nimport DialogContent from '@mui/material/DialogContent';\nimport { TextareaAutosize } from '@mui/material';\nimport userNotesContext from '../../Context/userNotesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = () => {\n  _s();\n\n  let navigate = useNavigate();\n  let {\n    id\n  } = useParams();\n  let buttonRef = useRef(null);\n  const {\n    CheckIfNoteUpdated,\n    setCheckIfNoteUpdated\n  } = useContext(userNotesContext);\n  setCheckIfNoteUpdated(false);\n\n  const onDismiss = async () => {\n    const resp = await axios.put(`/api/dashboard/notes/${id}`, {\n      title: Note.title,\n      body: Note.body\n    });\n    setCheckIfNoteUpdated(true);\n    navigate(-1);\n  };\n\n  const [Note, setNote] = useState({\n    id: id,\n    title: '',\n    body: ''\n  });\n\n  const fetchNote = async id => {\n    try {\n      const response = await axios.get(`/api/dashboard/${id}`, {\n        withCredentials: true\n      });\n\n      if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n        var _response$data, _response$data$note, _response$data2, _response$data2$note;\n\n        setNote({\n          title: response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$note = _response$data.note) === null || _response$data$note === void 0 ? void 0 : _response$data$note.title,\n          body: response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$note = _response$data2.note) === null || _response$data2$note === void 0 ? void 0 : _response$data2$note.body\n        });\n      }\n    } catch (err) {\n      console.log('error from dashboard js file', err);\n      navigate('/login');\n    }\n  };\n\n  const onChange = e => {\n    setNote(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    })); // setCheckIfNoteUpdated(true)\n  };\n\n  useEffect(() => {\n    fetchNote(id);\n  }, []);\n  useEffect(() => {}, [Note]);\n  if (!id) return null;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    \"aria-labelledby\": \"label\",\n    onDismiss: onDismiss,\n    initialFocusRef: buttonRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        justifyContent: 'center',\n        padding: '8px 8px',\n        border: '1px solid pink'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        \"aria-label\": \"empty textarea\" // minRows={3}\n        ,\n        style: {\n          padding: '1rem',\n          fontSize: '1.5rem',\n          width: '100%',\n          boxSizing: 'border-box'\n        },\n        name: \"title\",\n        placeholder: \"Title\",\n        onChange: onChange,\n        defaultValue: Note === null || Note === void 0 ? void 0 : Note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n          \"aria-label\": \"empty textarea\",\n          placeholder: \"Body\",\n          minRows: 10,\n          name: \"body\",\n          onChange: onChange,\n          defaultValue: Note === null || Note === void 0 ? void 0 : Note.body,\n          style: {\n            width: '100%',\n            boxSizing: 'border-box'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Modal, \"5LfY5OESw4GOaqhodnHO6t9doDk=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Modal.js"],"names":["React","useContext","useEffect","useRef","useState","useNavigate","useParams","Dialog","axios","DialogContent","TextareaAutosize","userNotesContext","Modal","navigate","id","buttonRef","CheckIfNoteUpdated","setCheckIfNoteUpdated","onDismiss","resp","put","title","Note","body","setNote","fetchNote","response","get","withCredentials","status","data","note","err","console","log","onChange","e","prevState","target","name","value","display","justifyContent","padding","border","fontSize","width","boxSizing"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { Dialog } from '@reach/dialog'\r\nimport '@reach/dialog/styles.css'\r\nimport axios from 'axios'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport { TextareaAutosize } from '@mui/material'\r\nimport userNotesContext from '../../Context/userNotesContext'\r\nconst Modal = () => {\r\n  let navigate = useNavigate()\r\n  let { id } = useParams()\r\n  let buttonRef = useRef(null)\r\n  const {CheckIfNoteUpdated,setCheckIfNoteUpdated} = useContext(userNotesContext)\r\nsetCheckIfNoteUpdated(false)\r\n  const onDismiss = async () => {\r\n    const resp = await axios.put(`/api/dashboard/notes/${id}`, {\r\n      title: Note.title,\r\n      body: Note.body,\r\n    })\r\n    setCheckIfNoteUpdated(true)\r\n\r\n    navigate(-1)\r\n  }\r\n  const [Note, setNote] = useState({\r\n    id: id,\r\n    title: '',\r\n    body: '',\r\n  })\r\n\r\n  const fetchNote = async (id) => {\r\n    try {\r\n      const response = await axios.get(`/api/dashboard/${id}`, {\r\n        withCredentials: true,\r\n      })\r\n      if (response?.status === 200) {\r\n        setNote({\r\n          title: response?.data?.note?.title,\r\n          body: response?.data?.note?.body,\r\n        })\r\n      }\r\n    } catch (err) {\r\n      console.log('error from dashboard js file', err)\r\n      navigate('/login')\r\n    }\r\n  }\r\n  const onChange = (e) => {\r\n    setNote((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }))\r\n    // setCheckIfNoteUpdated(true)\r\n  }\r\n  useEffect(() => {\r\n    fetchNote(id)\r\n  }, [])\r\n\r\n  useEffect(()=>{},[Note])\r\n\r\n  if (!id) return null\r\n  return (\r\n    <Dialog\r\n      aria-labelledby='label'\r\n      onDismiss={onDismiss}\r\n      initialFocusRef={buttonRef}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'grid',\r\n          justifyContent: 'center',\r\n          padding: '8px 8px',\r\n          border: '1px solid pink',\r\n        }}\r\n      >\r\n        <TextareaAutosize\r\n          aria-label='empty textarea'\r\n          // minRows={3}\r\n          style={{\r\n            padding: '1rem',\r\n            fontSize: '1.5rem',\r\n            width: '100%',\r\n            boxSizing: 'border-box',\r\n          }}\r\n          name='title'\r\n          placeholder='Title'\r\n          onChange={onChange}\r\n          defaultValue={Note?.title}\r\n        />\r\n        <DialogContent dividers>\r\n          <TextareaAutosize\r\n            aria-label='empty textarea'\r\n            placeholder='Body'\r\n            minRows={10}\r\n            name='body'\r\n            onChange={onChange}\r\n            defaultValue={Note?.body}\r\n            style={{ width: '100%', boxSizing: 'border-box' }}\r\n          />\r\n        </DialogContent>\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n"]},"metadata":{},"sourceType":"module"}