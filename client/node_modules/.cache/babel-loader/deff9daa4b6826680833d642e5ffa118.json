{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\Note.js\",\n    _s = $RefreshSig$();\n\nimport './Dashboard.css';\nimport React, { useState } from 'react';\nimport { Link, useNavigate, useLocation, Navigate, useParams } from 'react-router-dom';\nimport { Dialog, Input, TextareaAutosize, TextField } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BootstrapDialog = styled(Dialog)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    '& .MuiDialogContent-root': {\n      padding: theme.spacing(2)\n    },\n    '& .MuiDialogActions-root': {// padding: theme.spacing(1),\n    }\n  };\n});\n_c = BootstrapDialog;\n\nconst BootstrapDialogTitle = props => {\n  const {\n    children,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DialogTitle, {\n    sx: {\n      m: 0,\n      p: 0\n    },\n    ...other,\n    children: [children, onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      onClick: onClose,\n      sx: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        color: theme => theme.palette.grey[500]\n      },\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = BootstrapDialogTitle;\n\nconst Note = _ref2 => {\n  _s();\n\n  let {\n    note\n  } = _ref2;\n  // const location = useLocation()\n  // const { id } = useParams()\n  // const navigate = useNavigate()\n  const [Note, setNote] = useState({\n    id: note._id,\n    title: note.title,\n    body: note.body\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const onChange = e => {\n    console.log('note', Note.body);\n    setNote(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleClickOpen = () => {\n    setOpen(!open);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className='note-container' onClick={(e) => onNoteClick(_id)}>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleClickOpen,\n        children: \"Open dialog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(BootstrapDialog, {\n        onClose: handleClose,\n        \"aria-labelledby\": \"customized-dialog-title\",\n        open: open,\n        children: [\"Modal title :\", /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            children: \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            \"aria-label\": \"empty textarea\",\n            placeholder: \"Empty\",\n            minRows: 10,\n            defaultValue: Note.body,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Note, \"pYY5TqmL2w9qpOeDxlq6Vkmq8Ow=\");\n\n_c3 = Note;\nexport default Note;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"BootstrapDialog\");\n$RefreshReg$(_c2, \"BootstrapDialogTitle\");\n$RefreshReg$(_c3, \"Note\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Note.js"],"names":["React","useState","Link","useNavigate","useLocation","Navigate","useParams","Dialog","Input","TextareaAutosize","TextField","Button","styled","DialogTitle","DialogContent","DialogActions","IconButton","CloseIcon","Typography","BootstrapDialog","theme","padding","spacing","BootstrapDialogTitle","props","children","onClose","other","m","p","position","right","top","color","palette","grey","Note","note","setNote","id","_id","title","body","open","setOpen","onChange","e","console","log","prevState","target","name","value","handleClickOpen","handleClose","width"],"mappings":"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","sourcesContent":["import './Dashboard.css'\r\nimport React, { useState } from 'react'\r\nimport {\r\n  Link,\r\n  useNavigate,\r\n  useLocation,\r\n  Navigate,\r\n  useParams,\r\n} from 'react-router-dom'\r\n\r\nimport { Dialog, Input, TextareaAutosize, TextField } from '@mui/material'\r\nimport Button from '@mui/material/Button'\r\nimport { styled } from '@mui/material/styles'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2),\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    // padding: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n  const { children, onClose, ...other } = props\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 0 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label='close'\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  )\r\n}\r\nconst Note = ({ note }) => {\r\n  // const location = useLocation()\r\n  // const { id } = useParams()\r\n  // const navigate = useNavigate()\r\n  const [Note, setNote] = useState({\r\n    id: note._id,\r\n    title: note.title,\r\n    body: note.body,\r\n  })\r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  const onChange = (e) => {\r\n    console.log('note', Note.body);\r\n    setNote((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }))\r\n  }\r\n  const handleClickOpen = () => {\r\n    setOpen(!open)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    // <div className='note-container' onClick={(e) => onNoteClick(_id)}>\r\n    <div>\r\n      <Button variant='outlined' onClick={handleClickOpen}>\r\n        Open dialog\r\n      </Button>\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby='customized-dialog-title'\r\n        open={open}\r\n      >\r\n        Modal title :\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\r\n            ac consectetur ac, vestibulum at eros.\r\n          </Typography>\r\n          <TextareaAutosize\r\n            aria-label='empty textarea'\r\n            placeholder='Empty'\r\n            minRows={10}\r\n            defaultValue={Note.body}\r\n            style={{ width: '100%' }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {/* <Button autoFocus onClick={handleClose}>\r\n            Save changes\r\n          </Button> */}\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Note\r\n"]},"metadata":{},"sourceType":"module"}