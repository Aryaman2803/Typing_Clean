{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Hooks\\\\ModalEditor.js\";\nimport React from 'react';\nimport { Editor, RichUtils } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport Toolbar from './Toolbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalEditor = _ref => {\n  let {\n    editorState,\n    setEditorState,\n    showToolbar,\n    setCheckIfNoteIsEdited\n  } = _ref;\n\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      setEditorState(newState);\n      setCheckIfNoteIsEdited(true);\n    }\n  };\n\n  const onChange = newState => {\n    const currentContentState = editorState.getCurrentContent();\n    const newContentState = newState.getCurrentContent();\n    setEditorState(newState);\n    if (currentContentState !== newContentState) setCheckIfNoteIsEdited(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), showToolbar && /*#__PURE__*/_jsxDEV(Toolbar, {\n      editorState: editorState,\n      setEditorState: setEditorState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c = ModalEditor;\nexport default ModalEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalEditor\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Hooks/ModalEditor.js"],"names":["React","Editor","RichUtils","Toolbar","ModalEditor","editorState","setEditorState","showToolbar","setCheckIfNoteIsEdited","handleKeyCommand","command","newState","onChange","currentContentState","getCurrentContent","newContentState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,UAAlC;AACA,OAAO,yBAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,MAAMC,WAAW,GAAG,QAKd;AAAA,MALe;AACnBC,IAAAA,WADmB;AAEnBC,IAAAA,cAFmB;AAGnBC,IAAAA,WAHmB;AAInBC,IAAAA;AAJmB,GAKf;;AACJ,QAAMC,gBAAgB,GAAG,CAACC,OAAD,EAAUL,WAAV,KAA0B;AACjD,UAAMM,QAAQ,GAAGT,SAAS,CAACO,gBAAV,CAA2BJ,WAA3B,EAAwCK,OAAxC,CAAjB;;AACA,QAAIC,QAAJ,EAAc;AACZL,MAAAA,cAAc,CAACK,QAAD,CAAd;AACAH,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;AACF,GAND;;AAQA,QAAMI,QAAQ,GAAID,QAAD,IAAc;AAC7B,UAAME,mBAAmB,GAAGR,WAAW,CAACS,iBAAZ,EAA5B;AACA,UAAMC,eAAe,GAAGJ,QAAQ,CAACG,iBAAT,EAAxB;AACAR,IAAAA,cAAc,CAACK,QAAD,CAAd;AACA,QAAIE,mBAAmB,KAAKE,eAA5B,EAA6CP,sBAAsB,CAAC,IAAD,CAAtB;AAC9C,GALD;;AAMA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEH,WAArB;AAAkC,MAAA,QAAQ,EAAEO;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,EAEGL,WAAW,iBACV,QAAC,OAAD;AAAS,MAAA,WAAW,EAAEF,WAAtB;AAAmC,MAAA,cAAc,EAAEC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADF;AAQD,CA5BD;;KAAMF,W;AA8BN,eAAeA,WAAf","sourcesContent":["import React from 'react'\r\nimport { Editor, RichUtils } from 'draft-js'\r\nimport 'draft-js/dist/Draft.css'\r\nimport Toolbar from './Toolbar'\r\n\r\nconst ModalEditor = ({\r\n  editorState,\r\n  setEditorState,\r\n  showToolbar,\r\n  setCheckIfNoteIsEdited,\r\n}) => {\r\n  const handleKeyCommand = (command, editorState) => {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command)\r\n    if (newState) {\r\n      setEditorState(newState)\r\n      setCheckIfNoteIsEdited(true)\r\n    }\r\n  }\r\n\r\n  const onChange = (newState) => {\r\n    const currentContentState = editorState.getCurrentContent()\r\n    const newContentState = newState.getCurrentContent()\r\n    setEditorState(newState)\r\n    if (currentContentState !== newContentState) setCheckIfNoteIsEdited(true)\r\n  }\r\n  return (\r\n    <>\r\n      <Editor editorState={editorState} onChange={onChange} />\r\n      {showToolbar && (\r\n        <Toolbar editorState={editorState} setEditorState={setEditorState} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ModalEditor\r\n"]},"metadata":{},"sourceType":"module"}