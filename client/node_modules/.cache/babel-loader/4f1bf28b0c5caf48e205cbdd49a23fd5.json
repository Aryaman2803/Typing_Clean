{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\AddNote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { convertToRaw, Editor, EditorState, RichUtils } from 'draft-js';\nimport Toolbar from '../../Hooks/Toolbar';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddNote() {\n  _s();\n\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\n  const [checkIfNoteEdited, setCheckIfNoteEdited] = useState(false);\n\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      setEditorState(newState);\n      setCheckIfNoteEdited(true);\n      return 'handled';\n    }\n\n    return 'not handled';\n  };\n\n  const submitNote = async () => {\n    // axios.post('/api/dashboard/notes', {\n    //   body: JSON.stringify(convertToRaw(editorState.getCurrentContent())),\n    // })\n    setCheckIfNoteEdited(false);\n  };\n\n  const onBlur = async () => {\n    await submitNote();\n    console.log('blur');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      editorState: editorState,\n      setEditorState: setEditorState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      onChange: setEditorState,\n      handleKeyCommand: handleKeyCommand,\n      onBlur: onBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddNote, \"Pdj0mg2eM7jGDmfTp0a5YkLUVCk=\");\n\n_c = AddNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNote\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/AddNote.js"],"names":["React","useState","convertToRaw","Editor","EditorState","RichUtils","Toolbar","axios","AddNote","editorState","setEditorState","createEmpty","checkIfNoteEdited","setCheckIfNoteEdited","handleKeyCommand","command","newState","submitNote","onBlur","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,WAA/B,EAA4CC,SAA5C,QAA6D,UAA7D;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,MAC7CG,WAAW,CAACO,WAAZ,EAD4C,CAA9C;AAGA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CZ,QAAQ,CAAC,KAAD,CAA1D;;AACA,QAAMa,gBAAgB,GAAG,CAACC,OAAD,EAAUN,WAAV,KAA0B;AACjD,UAAMO,QAAQ,GAAGX,SAAS,CAACS,gBAAV,CAA2BL,WAA3B,EAAwCM,OAAxC,CAAjB;;AACA,QAAIC,QAAJ,EAAc;AACZN,MAAAA,cAAc,CAACM,QAAD,CAAd;AACAH,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACA,aAAO,SAAP;AACD;;AACD,WAAO,aAAP;AACD,GARD;;AASA,QAAMI,UAAU,GAAG,YAAY;AAC7B;AACA;AACA;AACAJ,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,GALD;;AAMA,QAAMK,MAAM,GAAG,YAAY;AACzB,UAAMD,UAAU,EAAhB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,WAAW,EAAEX,WAAtB;AAAmC,MAAA,cAAc,EAAEC;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,WAAW,EAAED,WADf;AAEE,MAAA,QAAQ,EAAEC,cAFZ;AAGE,MAAA,gBAAgB,EAAEI,gBAHpB;AAIE,MAAA,MAAM,EAAEI;AAJV;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GApCuBV,O;;KAAAA,O","sourcesContent":["import React, { useState } from 'react'\r\nimport { convertToRaw, Editor, EditorState, RichUtils } from 'draft-js'\r\nimport Toolbar from '../../Hooks/Toolbar'\r\nimport axios from 'axios'\r\nexport default function AddNote() {\r\n  const [editorState, setEditorState] = useState(() =>\r\n    EditorState.createEmpty()\r\n  )\r\n  const [checkIfNoteEdited, setCheckIfNoteEdited] = useState(false)\r\n  const handleKeyCommand = (command, editorState) => {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command)\r\n    if (newState) {\r\n      setEditorState(newState)\r\n      setCheckIfNoteEdited(true)\r\n      return 'handled'\r\n    }\r\n    return 'not handled'\r\n  }\r\n  const submitNote = async () => {\r\n    // axios.post('/api/dashboard/notes', {\r\n    //   body: JSON.stringify(convertToRaw(editorState.getCurrentContent())),\r\n    // })\r\n    setCheckIfNoteEdited(false)\r\n  }\r\n  const onBlur = async () => {\r\n    await submitNote()\r\n    console.log('blur')\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <Toolbar editorState={editorState} setEditorState={setEditorState} />\r\n      <Editor\r\n        editorState={editorState}\r\n        onChange={setEditorState}\r\n        handleKeyCommand={handleKeyCommand}\r\n        onBlur={onBlur}\r\n      />\r\n    </section>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}