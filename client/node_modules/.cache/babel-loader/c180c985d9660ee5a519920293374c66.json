{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Dialog } from '@reach/dialog';\nimport '@reach/dialog/styles.css';\nimport axios from 'axios';\nimport DialogContent from '@mui/material/DialogContent';\nimport { TextareaAutosize } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Modal = () => {\n  _s();\n\n  let navigate = useNavigate();\n  let {\n    id\n  } = useParams();\n  let buttonRef = useRef(null);\n\n  const onDismiss = async () => {\n    // const resp = await axios.put(`/api/dashboard/notes/${id}`, {\n    //   title: Note.title,\n    //   body: Note.body,\n    // })\n    navigate(-1);\n  };\n\n  console.log('from modal', id);\n  const [Note, setNote] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchNote = async id => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(`/api/dashboard/${id}`, {\n        withCredentials: true\n      });\n\n      if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n        var _response$data;\n\n        setIsLoading(false);\n        setNote(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.note);\n      }\n    } catch (err) {\n      console.log('error from dashboard js file', err);\n      navigate('/login');\n    }\n  };\n\n  useEffect(() => {\n    fetchNote(id);\n  }, [isLoading]);\n  if (!id) return null;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    \"aria-labelledby\": \"label\",\n    onDismiss: onDismiss,\n    initialFocusRef: buttonRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        justifyContent: 'center',\n        padding: '8px 8px',\n        border: '1px solid pink'\n      },\n      children: !isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n          \"aria-label\": \"empty textarea\" // minRows={3}\n          ,\n          style: {\n            padding: '1rem',\n            fontSize: '1.5rem',\n            width: '100%',\n            boxSizing: 'border-box'\n          },\n          name: \"title\",\n          placeholder: \"Title\" // onChange={onChange}\n          ,\n          defaultValue: Note === null || Note === void 0 ? void 0 : Note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            \"aria-label\": \"empty textarea\",\n            placeholder: \"Body\",\n            minRows: 10,\n            name: \"body\" // onChange={onChange}\n            ,\n            defaultValue: Note === null || Note === void 0 ? void 0 : Note.body,\n            style: {\n              width: '100%',\n              boxSizing: 'border-box'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Modal, \"3nBMkgpUoP0sRanuGqzGt3Ielag=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Modal.js"],"names":["React","useEffect","useRef","useState","useNavigate","useParams","Dialog","axios","DialogContent","TextareaAutosize","Modal","navigate","id","buttonRef","onDismiss","console","log","Note","setNote","isLoading","setIsLoading","fetchNote","response","get","withCredentials","status","data","note","err","display","justifyContent","padding","border","fontSize","width","boxSizing","title","body"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { Dialog } from '@reach/dialog'\r\nimport '@reach/dialog/styles.css'\r\nimport axios from 'axios'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport { TextareaAutosize } from '@mui/material'\r\nconst Modal = () => {\r\n  let navigate = useNavigate()\r\n  let { id } = useParams()\r\n  let buttonRef = useRef(null)\r\n\r\n  const onDismiss = async () => {\r\n    // const resp = await axios.put(`/api/dashboard/notes/${id}`, {\r\n    //   title: Note.title,\r\n    //   body: Note.body,\r\n    // })\r\n    navigate(-1)\r\n  }\r\n\r\n  console.log('from modal', id)\r\n  const [Note, setNote] = useState()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const fetchNote = async (id) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const response = await axios.get(`/api/dashboard/${id}`, {\r\n        withCredentials: true,\r\n      })\r\n      if (response?.status === 200) {\r\n        setIsLoading(false)\r\n        setNote(response?.data?.note)\r\n      }\r\n    } catch (err) {\r\n      console.log('error from dashboard js file', err)\r\n      navigate('/login')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchNote(id)\r\n  }, [isLoading])\r\n\r\n  if (!id) return null\r\n  return (\r\n    <Dialog\r\n      aria-labelledby='label'\r\n      onDismiss={onDismiss}\r\n      initialFocusRef={buttonRef}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'grid',\r\n          justifyContent: 'center',\r\n          padding: '8px 8px',\r\n          border: '1px solid pink',\r\n        }}\r\n      >\r\n        {!isLoading && (\r\n          <>\r\n            <input type='text' />\r\n            <TextareaAutosize\r\n              aria-label='empty textarea'\r\n              // minRows={3}\r\n              style={{\r\n                padding: '1rem',\r\n                fontSize: '1.5rem',\r\n                width: '100%',\r\n                boxSizing: 'border-box',\r\n              }}\r\n              name='title'\r\n              placeholder='Title'\r\n              // onChange={onChange}\r\n              defaultValue={Note?.title}\r\n            />\r\n            <DialogContent dividers>\r\n              <TextareaAutosize\r\n                aria-label='empty textarea'\r\n                placeholder='Body'\r\n                minRows={10}\r\n                name='body'\r\n                // onChange={onChange}\r\n                defaultValue={Note?.body}\r\n                style={{ width: '100%', boxSizing: 'border-box' }}\r\n              />\r\n            </DialogContent>\r\n          </>\r\n        )}\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n"]},"metadata":{},"sourceType":"module"}