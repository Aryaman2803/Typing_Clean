{"ast":null,"code":"import _slicedToArray from\"C:/WEBDEV/Typing/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./Dashboard.css';import React,{useEffect,useState}from'react';import{Link,useLocation}from'react-router-dom';import'./Dashboard.css';import{convertFromRaw,EditorState}from'draft-js';import ModalEditor from'../../Hooks/ModalEditor';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Note=function Note(_ref){var note=_ref.note;var location=useLocation();var _useState=useState(calcState(note.title)),_useState2=_slicedToArray(_useState,2),editorStateTitle=_useState2[0],setEditorStateTitle=_useState2[1];var _useState3=useState(calcState(note.body)),_useState4=_slicedToArray(_useState3,2),editorStateBody=_useState4[0],setEditorStateBody=_useState4[1];useEffect(function(){setEditorStateTitle(calcState(note.title));setEditorStateBody(calcState(note.body));},[note]);return/*#__PURE__*/_jsx(\"section\",{className:\"single-note-wrapper\",children:/*#__PURE__*/_jsx(Link,{to:\"https://typingmernapp.herokuapp.com/api/dashboard/\".concat(note._id),state:{background:location},className:\"note-link\",children:/*#__PURE__*/_jsxs(\"article\",{className:\"single-note\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"note-title\",children:/*#__PURE__*/_jsx(ModalEditor,{editorState:editorStateTitle,onChange:setEditorStateTitle,isReadOnly:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"note-body\",children:/*#__PURE__*/_jsx(ModalEditor,{editorState:editorStateBody,onChange:setEditorStateBody,isReadOnly:true,updatedAt:note.updatedAt})})]})},note._id)});};var calcState=function calcState(value){return value?EditorState.createWithContent(convertFromRaw(JSON.parse(value))):EditorState.createEmpty();};export default Note;","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Note.js"],"names":["React","useEffect","useState","Link","useLocation","convertFromRaw","EditorState","ModalEditor","Note","note","location","calcState","title","editorStateTitle","setEditorStateTitle","body","editorStateBody","setEditorStateBody","_id","background","updatedAt","value","createWithContent","JSON","parse","createEmpty"],"mappings":"6GAAA,MAAO,iBAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,WAAf,KAAkC,kBAAlC,CACA,MAAO,iBAAP,CACA,OAASC,cAAT,CAAyBC,WAAzB,KAA4C,UAA5C,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CACzB,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CAEA,cAAgDF,QAAQ,CACtDS,SAAS,CAACF,IAAI,CAACG,KAAN,CAD6C,CAAxD,wCAAOC,gBAAP,eAAyBC,mBAAzB,eAGA,eAA8CZ,QAAQ,CAACS,SAAS,CAACF,IAAI,CAACM,IAAN,CAAV,CAAtD,yCAAOC,eAAP,eAAwBC,kBAAxB,eAEAhB,SAAS,CAAC,UAAM,CACda,mBAAmB,CAACH,SAAS,CAACF,IAAI,CAACG,KAAN,CAAV,CAAnB,CACAK,kBAAkB,CAACN,SAAS,CAACF,IAAI,CAACM,IAAN,CAAV,CAAlB,CACD,CAHQ,CAGN,CAACN,IAAD,CAHM,CAAT,CAKA,mBACE,gBAAS,SAAS,CAAC,qBAAnB,uBACE,KAAC,IAAD,EAEE,EAAE,6DAAuDA,IAAI,CAACS,GAA5D,CAFJ,CAGE,KAAK,CAAE,CAAEC,UAAU,CAAET,QAAd,CAHT,CAIE,SAAS,CAAC,WAJZ,uBAME,iBAAS,SAAS,CAAC,aAAnB,wBACE,YAAK,SAAS,CAAC,YAAf,uBACE,KAAC,WAAD,EACE,WAAW,CAAEG,gBADf,CAEE,QAAQ,CAAEC,mBAFZ,CAGE,UAAU,CAAE,IAHd,EADF,EADF,cAQE,YAAK,SAAS,CAAC,WAAf,uBACE,KAAC,WAAD,EACE,WAAW,CAAEE,eADf,CAEE,QAAQ,CAAEC,kBAFZ,CAGE,UAAU,CAAE,IAHd,CAIE,SAAS,CAAER,IAAI,CAACW,SAJlB,EADF,EARF,GANF,EACOX,IAAI,CAACS,GADZ,CADF,EADF,CA4BD,CAzCD,CA2CA,GAAMP,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACU,KAAD,CAAW,CAC3B,MAAOA,CAAAA,KAAK,CACRf,WAAW,CAACgB,iBAAZ,CAA8BjB,cAAc,CAACkB,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAD,CAA5C,CADQ,CAERf,WAAW,CAACmB,WAAZ,EAFJ,CAGD,CAJD,CAKA,cAAejB,CAAAA,IAAf","sourcesContent":["import './Dashboard.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport './Dashboard.css'\r\nimport { convertFromRaw, EditorState } from 'draft-js'\r\nimport ModalEditor from '../../Hooks/ModalEditor'\r\n\r\nconst Note = ({ note }) => {\r\n  const location = useLocation()\r\n\r\n  const [editorStateTitle, setEditorStateTitle] = useState(\r\n    calcState(note.title)\r\n  )\r\n  const [editorStateBody, setEditorStateBody] = useState(calcState(note.body))\r\n\r\n  useEffect(() => {\r\n    setEditorStateTitle(calcState(note.title))\r\n    setEditorStateBody(calcState(note.body))\r\n  }, [note])\r\n\r\n  return (\r\n    <section className='single-note-wrapper'>\r\n      <Link\r\n        key={note._id}\r\n        to={`https://typingmernapp.herokuapp.com/api/dashboard/${note._id}`}\r\n        state={{ background: location }}\r\n        className='note-link'\r\n      >\r\n        <article className='single-note'>\r\n          <div className='note-title'>\r\n            <ModalEditor\r\n              editorState={editorStateTitle}\r\n              onChange={setEditorStateTitle}\r\n              isReadOnly={true}\r\n            />\r\n          </div>\r\n          <div className='note-body'>\r\n            <ModalEditor\r\n              editorState={editorStateBody}\r\n              onChange={setEditorStateBody}\r\n              isReadOnly={true}\r\n              updatedAt={note.updatedAt}\r\n            />\r\n          </div>\r\n        </article>\r\n      </Link>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst calcState = (value) => {\r\n  return value\r\n    ? EditorState.createWithContent(convertFromRaw(JSON.parse(value)))\r\n    : EditorState.createEmpty()\r\n}\r\nexport default Note\r\n"]},"metadata":{},"sourceType":"module"}