{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEBDEV\\\\Typing\\\\client\\\\src\\\\Components\\\\Dashboard\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Dialog } from '@reach/dialog';\nimport '@reach/dialog/styles.css';\nimport axios from 'axios';\nimport DialogContent from '@mui/material/DialogContent';\nimport { TextareaAutosize } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = () => {\n  _s();\n\n  let navigate = useNavigate();\n  let {\n    id\n  } = useParams();\n  let buttonRef = useRef(null);\n\n  const onDismiss = async () => {\n    // const resp = await axios.put(`/api/dashboard/notes/${id}`, {\n    //   title: Note.title,\n    //   body: Note.body,\n    // })\n    navigate(-1);\n  };\n\n  console.log('from modal', id);\n  const [Note, setNote] = useState();\n\n  const fetchNote = async id => {\n    try {\n      const response = await axios.get(`/api/dashboard/${id}`, {\n        withCredentials: true\n      });\n\n      if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n        var _response$data;\n\n        setNote(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.note);\n      }\n    } catch (err) {\n      console.log('error from dashboard js file', err);\n      navigate('/login');\n    }\n  };\n\n  useEffect(() => {\n    fetchNote(id);\n  }, []);\n  if (!id) return null;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    \"aria-labelledby\": \"label\",\n    onDismiss: onDismiss,\n    initialFocusRef: buttonRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        justifyContent: 'center',\n        padding: '8px 8px',\n        border: '1px solid pink'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        \"aria-label\": \"empty textarea\" // minRows={3}\n        ,\n        style: {\n          padding: '1rem',\n          fontSize: '1.5rem',\n          width: '100%',\n          boxSizing: 'border-box'\n        },\n        name: \"title\",\n        placeholder: \"Title\" // onChange={onChange}\n        ,\n        defaultValue: Note === null || Note === void 0 ? void 0 : Note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n          \"aria-label\": \"empty textarea\",\n          placeholder: \"Body\",\n          minRows: 10,\n          name: \"body\" // onChange={onChange}\n          ,\n          defaultValue: Note === null || Note === void 0 ? void 0 : Note.body,\n          style: {\n            width: '100%',\n            boxSizing: 'border-box'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Modal, \"ZT5KyegjW59Ai6CWPgrZBa2IH6k=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["C:/WEBDEV/Typing/client/src/Components/Dashboard/Modal.js"],"names":["React","useEffect","useRef","useState","useNavigate","useParams","Dialog","axios","DialogContent","TextareaAutosize","Modal","navigate","id","buttonRef","onDismiss","console","log","Note","setNote","fetchNote","response","get","withCredentials","status","data","note","err","display","justifyContent","padding","border","fontSize","width","boxSizing","title","body"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { Dialog } from '@reach/dialog'\r\nimport '@reach/dialog/styles.css'\r\nimport axios from 'axios'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport {TextareaAutosize} from '@mui/material'\r\nconst Modal = () => {\r\n  let navigate = useNavigate()\r\n  let { id } = useParams()\r\n  let buttonRef = useRef(null)\r\n\r\n  const onDismiss = async () => {\r\n    // const resp = await axios.put(`/api/dashboard/notes/${id}`, {\r\n    //   title: Note.title,\r\n    //   body: Note.body,\r\n    // })\r\n    navigate(-1)\r\n  }\r\n\r\n  console.log('from modal', id)\r\n  const [Note, setNote] = useState()\r\n  const fetchNote = async (id) => {\r\n    try {\r\n      const response = await axios.get(`/api/dashboard/${id}`, {\r\n        withCredentials: true,\r\n      })\r\n      if (response?.status === 200) {\r\n        setNote(response?.data?.note)\r\n      }\r\n    } catch (err) {\r\n      console.log('error from dashboard js file', err)\r\n      navigate('/login')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchNote(id)\r\n  }, [])\r\n\r\n  if (!id) return null\r\n  return (\r\n    <Dialog\r\n      aria-labelledby='label'\r\n      onDismiss={onDismiss}\r\n      initialFocusRef={buttonRef}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'grid',\r\n          justifyContent: 'center',\r\n          padding: '8px 8px',\r\n          border: '1px solid pink',\r\n        }}\r\n      >\r\n        <input type='text' />\r\n        <TextareaAutosize\r\n          aria-label='empty textarea'\r\n          // minRows={3}\r\n          style={{\r\n            padding: '1rem',\r\n            fontSize: '1.5rem',\r\n            width: '100%',\r\n            boxSizing: 'border-box',\r\n          }}\r\n          name='title'\r\n          placeholder='Title'\r\n          // onChange={onChange}\r\n          defaultValue={Note?.title}\r\n        />\r\n        <DialogContent dividers>\r\n          <TextareaAutosize\r\n            aria-label='empty textarea'\r\n            placeholder='Body'\r\n            minRows={10}\r\n            name='body'\r\n            // onChange={onChange}\r\n            defaultValue={Note?.body}\r\n            style={{ width: '100%', boxSizing: 'border-box' }}\r\n          />\r\n        </DialogContent>\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n"]},"metadata":{},"sourceType":"module"}