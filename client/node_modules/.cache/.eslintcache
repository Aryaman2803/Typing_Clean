[{"C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Home\\Home.js":"1","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Login\\Login.js":"2","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Dashboard\\Dashboard.js":"3","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Home\\Navbar.js":"4","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Dashboard\\Navbar.js":"5","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\index.js":"6","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\App.js":"7","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Context\\theme.js":"8","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Context\\userNotesContext.js":"9","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\SignUp\\Signup.js":"10","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Dashboard\\Modal.js":"11","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Dashboard\\Note.js":"12","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Dashboard\\AddNote.js":"13","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Hooks\\ModalEditor.js":"14","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Hooks\\Toolbar.js":"15","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Hooks\\DraftEditor.js":"16"},{"size":3660,"mtime":1646737918856,"results":"17","hashOfConfig":"18"},{"size":5877,"mtime":1646736944081,"results":"19","hashOfConfig":"18"},{"size":2056,"mtime":1646736944077,"results":"20","hashOfConfig":"18"},{"size":6626,"mtime":1646737994622,"results":"21","hashOfConfig":"18"},{"size":6521,"mtime":1646738033142,"results":"22","hashOfConfig":"18"},{"size":247,"mtime":1646733988202,"results":"23","hashOfConfig":"18"},{"size":1783,"mtime":1646733988190,"results":"24","hashOfConfig":"18"},{"size":444,"mtime":1646733988198,"results":"25","hashOfConfig":"18"},{"size":117,"mtime":1646733988198,"results":"26","hashOfConfig":"18"},{"size":5487,"mtime":1646733988198,"results":"27","hashOfConfig":"18"},{"size":4149,"mtime":1646733988192,"results":"28","hashOfConfig":"18"},{"size":1630,"mtime":1646733988193,"results":"29","hashOfConfig":"18"},{"size":2856,"mtime":1646733988191,"results":"30","hashOfConfig":"18"},{"size":1029,"mtime":1646733988199,"results":"31","hashOfConfig":"18"},{"size":4749,"mtime":1646733988200,"results":"32","hashOfConfig":"18"},{"size":1421,"mtime":1646733988199,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14xppc0",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Home\\Home.js",[],[],"C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Login\\Login.js",[],[],"C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Dashboard\\Dashboard.js",["86","87"],[],"import './Dashboard.css'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate, Outlet } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Navbar from './Navbar'\r\nimport Note from './Note'\r\nimport userNotesContext from '../../Context/userNotesContext'\r\nimport AddNote from './AddNote'\r\n\r\nfunction Dashboard() {\r\n  const navigate = useNavigate()\r\n  const [Notes, setNotes] = useState()\r\n  const [CheckIfNewNoteAdded, setCheckIfNewNoteAdded] = useState(false)\r\n  const [SearchNote, setSearchNote] = useState('')\r\n\r\n  const { CheckIfNoteUpdated, setCheckIfNoteUpdated } =\r\n    useContext(userNotesContext)\r\n  const verifyUser = async () => {\r\n    try {\r\n      const response = await axios.get('/api/dashboard/', {\r\n        withCredentials: true,\r\n      })\r\n      if (response?.status === 200) {\r\n        setNotes(response?.data?.notes)\r\n      }\r\n    } catch (err) {\r\n      console.log('error from dashboard js file', err)\r\n      navigate('/login')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    verifyUser()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (CheckIfNewNoteAdded || CheckIfNoteUpdated) {\r\n      verifyUser()\r\n      setCheckIfNoteUpdated(false)\r\n      \r\n      setCheckIfNewNoteAdded(false)\r\n    }\r\n  }, [CheckIfNewNoteAdded, CheckIfNoteUpdated])\r\n\r\n  return (\r\n    <div className='notes-wrapper'>\r\n      <Navbar setSearchNote={setSearchNote} />\r\n      {!SearchNote && (\r\n        <AddNote setCheckIfNewNoteAdded={setCheckIfNewNoteAdded} />\r\n      )}\r\n      <Outlet />\r\n      <div className='notes-container'>\r\n        {Notes?.filter(\r\n          (note) =>\r\n            note.title.toLowerCase().includes(SearchNote) ||\r\n            note.body.toLowerCase().includes(SearchNote)\r\n        )?.map((note) => {\r\n          return (\r\n            <Note\r\n              key={note._id}\r\n              note={note}\r\n              setCheckIfNoteUpdated={setCheckIfNoteUpdated}\r\n              CheckIfNoteUpdated={CheckIfNoteUpdated}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Home\\Navbar.js",[],[],"C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Dashboard\\Navbar.js",[],[],"C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\index.js",[],[],"C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\App.js",[],[],"C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Context\\theme.js",["88","89","90"],[],"import React from 'react'\r\nimport { ReactDOM } from 'react'\r\nimport { red } from '@mui/material/colors'\r\nimport {  createTheme } from '@mui/material/styles'\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    light: {\r\n      primaryText: '#121212', // black\r\n      secondaryText: '#FAFAFA', // white\r\n    },\r\n    dark: {\r\n      primaryText: '#FAFAFA', // white\r\n      secondaryText: '#FAFAFA', // white\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme\r\n","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Context\\userNotesContext.js",[],[],"C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\SignUp\\Signup.js",["91"],[],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Button from '@mui/material/Button'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\nimport Box from '@mui/material/Box'\r\nimport PersonIcon from '@mui/icons-material/Person'\r\nimport EmailIcon from '@mui/icons-material/Email'\r\nimport LockIcon from '@mui/icons-material/Lock'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\nimport Navbar from '../Home/Navbar'\r\n\r\nfunction Signup() {\r\n  const [error, setError] = useState(false)\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  })\r\n  const { username, email, password } = formData\r\n  const onChange = (e) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }))\r\n  }\r\n  // const [email, setEmail] = useState('')\r\n  // const [username, setUsername] = useState('')\r\n  // const [password, setPassword] = useState('')\r\n  const navigate = useNavigate()\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault()\r\n    // const URL = 'http://localhost:3000/api/register'\r\n    const URL = '/api/register'\r\n    await axios\r\n      .post(URL, {\r\n        email: email,\r\n        password: password,\r\n        username: username,\r\n      })\r\n      .then((response) => {\r\n        console.log('ohoo', response.data)\r\n        if (response.data.error) setError(true)\r\n        else navigate('/login')\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <section\r\n        style={{\r\n          boxSizing: 'border-box',\r\n          minHeight: '100vh',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          backgroundColor: '#FAF9F6',\r\n        }}\r\n      >\r\n        <form onSubmit={onSubmit}>\r\n          <Grid\r\n            container\r\n            direction='column'\r\n            alignItems='center'\r\n            justifyContent='center'\r\n            backgroundColor='white'\r\n            sx={{\r\n              width: {\r\n                xs: 350,\r\n                sm: 400,\r\n              },\r\n              height: {\r\n                xs: 500,\r\n                sm: 500,\r\n              },\r\n              boxShadow: 1,\r\n            }}\r\n          >\r\n            <h1>Register</h1>\r\n            <Grid container direction='column' alignItems='center'>\r\n              <Box\r\n                sx={{ display: 'flex', alignItems: 'flex-end', p: 0.5, m: 1 }}\r\n              >\r\n                <PersonIcon sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\r\n                <TextField\r\n                  id='username'\r\n                  type='text'\r\n                  label='Username'\r\n                  variant='standard'\r\n                  name='username'\r\n                  value={username}\r\n                  onChange={onChange}\r\n                  sx={{\r\n                    width: {\r\n                      xs: 220,\r\n                      sm: 280,\r\n                    },\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Box\r\n                sx={{ display: 'flex', alignItems: 'flex-end', p: 0.5, m: 1 }}\r\n              >\r\n                <EmailIcon sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\r\n                <TextField\r\n                  aria-label='Enter email'\r\n                  id='email'\r\n                  type='email'\r\n                  label='Email'\r\n                  variant='standard'\r\n                  name='email'\r\n                  value={email}\r\n                  onChange={onChange}\r\n                  sx={{\r\n                    width: {\r\n                      xs: 220,\r\n                      sm: 280,\r\n                    },\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Box\r\n                sx={{ display: 'flex', alignItems: 'flex-end', p: 0.5, m: 1 }}\r\n              >\r\n                <LockIcon sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\r\n                <TextField\r\n                  aria-label='Enter password'\r\n                  id='password'\r\n                  autoComplete='off'\r\n                  type='password'\r\n                  label='Password'\r\n                  variant='standard'\r\n                  name='password'\r\n                  value={password}\r\n                  onChange={onChange}\r\n                  sx={{\r\n                    width: {\r\n                      xs: 220,\r\n                      sm: 280,\r\n                    },\r\n                  }}\r\n                />\r\n              </Box>\r\n\r\n              <Button\r\n                type='submit'\r\n                size='medium'\r\n                variant='contained'\r\n                endIcon={<LoginIcon />}\r\n                sx={{ width: 120, mt: 2 }}\r\n                disabled={!email || !password}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <div style={{ marginTop: '0.5rem' }}>\r\n                Already have an account?\r\n                <span\r\n                  style={{\r\n                    paddingLeft: '5px',\r\n                    textDecoration: 'underline',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  onClick={(e) => {\r\n                    navigate('/login')\r\n                  }}\r\n                >\r\n                  SIGN IN\r\n                </span>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Dashboard\\Modal.js",["92","93"],[],"import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { Dialog } from '@reach/dialog'\r\nimport '@reach/dialog/styles.css'\r\nimport axios from 'axios'\r\nimport userNotesContext from '../../Context/userNotesContext'\r\nimport './Dashboard.css'\r\nimport { convertFromRaw, convertToRaw, EditorState } from 'draft-js'\r\nimport ModalEditor from '../../Hooks/ModalEditor'\r\nimport Toolbar from '../../Hooks/Toolbar'\r\n\r\nconst Modal = () => {\r\n  let navigate = useNavigate()\r\n  let { id } = useParams()\r\n  let buttonRef = useRef(null)\r\n  const { CheckIfNoteUpdated, setCheckIfNoteUpdated } =\r\n    useContext(userNotesContext)\r\n\r\n  const [CheckIfNoteIsEdited, setCheckIfNoteIsEdited] = useState(false)\r\n  const [editorStateTitle, setEditorStateTitle] = useState(() =>\r\n    EditorState.createEmpty()\r\n  )\r\n  const [editorStateBody, setEditorStateBody] = useState(() =>\r\n    EditorState.createEmpty()\r\n  )\r\n  const [updatedAt, setUpdatedAt] = useState('')\r\n\r\n  const onDismiss = async () => {\r\n    if (\r\n      CheckIfNoteIsEdited &&\r\n      (editorStateTitle.getCurrentContent().hasText() ||\r\n        editorStateBody.getCurrentContent().hasText())\r\n    ) {\r\n      await axios.put(`/api/dashboard/notes/${id}`, {\r\n        title: JSON.stringify(\r\n          convertToRaw(editorStateTitle.getCurrentContent())\r\n        ),\r\n        body: JSON.stringify(convertToRaw(editorStateBody.getCurrentContent())),\r\n      })\r\n      setCheckIfNoteUpdated(true)\r\n      setCheckIfNoteIsEdited(false)\r\n    } else if (\r\n      CheckIfNoteIsEdited &&\r\n      !editorStateTitle.getCurrentContent().hasText() &&\r\n      !editorStateBody.getCurrentContent().hasText()\r\n    ) {\r\n      await axios.delete(`/api/dashboard/notes/${id}`)\r\n      setCheckIfNoteUpdated(true)\r\n      setCheckIfNoteIsEdited(false)\r\n      console.log('deleted')\r\n    }\r\n    navigate(-1)\r\n  }\r\n\r\n  const fetchNote = async (id) => {\r\n    try {\r\n      const response = await axios.get(`/api/dashboard/${id}`, {\r\n        withCredentials: true,\r\n      })\r\n      if (response?.status === 200) {\r\n        setEditorStateTitle(\r\n          EditorState.createWithContent(\r\n            convertFromRaw(JSON.parse(response?.data.note.title))\r\n          )\r\n        )\r\n        setEditorStateBody(\r\n          EditorState.createWithContent(\r\n            convertFromRaw(JSON.parse(response?.data.note.body))\r\n          )\r\n        )\r\n        setUpdatedAt(response?.data.note.updatedAt)\r\n      }\r\n    } catch (err) {\r\n      console.log('error from dashboard js file', err)\r\n      navigate('/login')\r\n    }\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    await axios.delete(`/api/dashboard/notes/${id}`)\r\n    setCheckIfNoteUpdated(true)\r\n    navigate(-1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchNote(id)\r\n  }, [])\r\n\r\n  if (!id) return null\r\n  return (\r\n    <Dialog\r\n      aria-labelledby='label'\r\n      className='modal-wrapper'\r\n      onDismiss={onDismiss}\r\n      initialFocusRef={buttonRef}\r\n      onClick={(e) => e.stopPropagation()}\r\n    >\r\n      <div className='modal-wrapper-inner'>\r\n        <div className='modal-edit-title'>\r\n          <ModalEditor\r\n            editorState={editorStateTitle}\r\n            setEditorState={setEditorStateTitle}\r\n            showToolbar={false}\r\n            placeholderText={'Title'}\r\n            setCheckIfNoteIsEdited={setCheckIfNoteIsEdited}\r\n            isReadOnly={false}\r\n          />\r\n        </div>\r\n        <div className='modal-edit-body sc1'>\r\n          <ModalEditor\r\n            editorState={editorStateBody}\r\n            setEditorState={setEditorStateBody}\r\n            showToolbar={true}\r\n            placeholderText={'Body'}\r\n            setCheckIfNoteIsEdited={setCheckIfNoteIsEdited}\r\n            isReadOnly={false}\r\n          />\r\n        </div>\r\n        <div className='modal-toolbar'>\r\n          <Toolbar\r\n            editorState={editorStateBody}\r\n            setEditorState={setEditorStateBody}\r\n            switchFor={'modaleditor'}\r\n            handleDelete={handleDelete}\r\n            updatedAt={updatedAt}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Dashboard\\Note.js",[],[],"C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Components\\Dashboard\\AddNote.js",[],[],"C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Hooks\\ModalEditor.js",[],[],"C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Hooks\\Toolbar.js",[],[],"C:\\WEBDEV\\Typing-Clone\\Typing\\client\\src\\Hooks\\DraftEditor.js",[],[],{"ruleId":"94","severity":1,"message":"95","line":34,"column":6,"nodeType":"96","endLine":34,"endColumn":8,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":43,"column":6,"nodeType":"96","endLine":43,"endColumn":47,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13},{"ruleId":"100","severity":1,"message":"104","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":18},{"ruleId":"100","severity":1,"message":"105","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":13},{"ruleId":"100","severity":1,"message":"106","line":15,"column":10,"nodeType":"102","messageId":"103","endLine":15,"endColumn":15},{"ruleId":"100","severity":1,"message":"107","line":16,"column":11,"nodeType":"102","messageId":"103","endLine":16,"endColumn":29},{"ruleId":"94","severity":1,"message":"108","line":87,"column":6,"nodeType":"96","endLine":87,"endColumn":8,"suggestions":"109"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyUser'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has missing dependencies: 'setCheckIfNoteUpdated' and 'verifyUser'. Either include them or remove the dependency array.",["111"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'red' is defined but never used.","'error' is assigned a value but never used.","'CheckIfNoteUpdated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchNote' and 'id'. Either include them or remove the dependency array.",["112"],{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [verifyUser]",{"range":"119","text":"120"},"Update the dependencies array to be: [CheckIfNewNoteAdded, CheckIfNoteUpdated, setCheckIfNoteUpdated, verifyUser]",{"range":"121","text":"122"},"Update the dependencies array to be: [fetchNote, id]",{"range":"123","text":"124"},[1045,1047],"[verifyUser]",[1240,1281],"[CheckIfNewNoteAdded, CheckIfNoteUpdated, setCheckIfNoteUpdated, verifyUser]",[2797,2799],"[fetchNote, id]"]